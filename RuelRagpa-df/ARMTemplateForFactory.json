{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "RuelRagpa-df"
		},
		"AdventureWorks2022_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "uelness.database.windows.net"
		},
		"AdventureWorks2022_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "AdventureWorks2022_v2"
		},
		"AdventureWorksDW2022_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "uelness.database.windows.net"
		},
		"AdventureWorksDW2022_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "AdventureWorksDW2022_v2"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CurrencyRelatedTables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Currency Data to Staging",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\r\n    [CurrencyAlternateKey] = C.CurrencyCode,\r\n    [CurrencyName] = C.[Name]\r\nFROM\r\n    Sales.Currency C\r\nORDER BY\r\n    C.[Name]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "DELETE Integration.CurrencyStaging",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CurrencyAlternateKey",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "CurrencyAlternateKey",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CurrencyName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CurrencyName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AdventureWorksSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CurrencyStaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Migrate Currency Staging Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Currency Data to Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\n\t[CurrencyAlternateKey] = CS.CurrencyAlternateKey,\n\t[CurrencyName] = CS.CurrencyName\nFROM\n\tIntegration.CurrencyStaging CS LEFT JOIN\n\tdbo.DimCurrency C ON\n\t\tC.CurrencyAlternateKey = CS.CurrencyAlternateKey\nWHERE \n\tC.CurrencyKey IS NULL\nORDER BY\n\tCS.CurrencyName",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CurrencyAlternateKey",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CurrencyAlternateKey",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "CurrencyName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CurrencyName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CurrencyStaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DimCurrency",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Fact Currency Rate Data to Staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Migrate Currency Staging Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \r\n    [CurrencyAlternateKey] = CR.ToCurrencyCode,\r\n    [DateKey] = (\r\n        (YEAR(CR.CurrencyRateDate) * 10000) +\r\n        (MONTH(CR.CurrencyRateDate) * 100) + \r\n        DAY(CR.CurrencyRateDate)\r\n    ),\r\n    [AverageRate] = 1 / CR.AverageRate,\r\n    [EndOfDayRate] = 1 / CR.EndOfDayRate,\r\n    [Date] = CR.CurrencyRateDate\r\nFROM \r\n    Sales.CurrencyRate CR \r\nORDER BY\r\n    CR.CurrencyRateDate,\r\n    CR.ToCurrencyCode",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "DELETE Integration.FactCurrencyRateStaging",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CurrencyAlternateKey",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "CurrencyAlternateKey",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AverageRate",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "AverageRate",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "EndOfDayRate",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "EndOfDayRate",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Date",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AdventureWorksSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "FactCurrencyRateStaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Migrate Fact Currency Staging Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Fact Currency Rate Data to Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\r\n    [CurrencyKey] = C.CurrencyKey,\r\n    [DateKey] = FCRS.DateKey,\r\n    [AverageRate] = FCRS.AverageRate,\r\n    [EndOfDayRate] = FCRS.EndOfDayRate,\r\n    [Date] = FCRS.Date\t\r\nFROM\r\n    Integration.FactCurrencyRateStaging FCRS LEFT JOIN\r\n    dbo.DimCurrency C ON\r\n        C.CurrencyAlternateKey = FCRS.CurrencyAlternateKey LEFT JOIN\r\n    dbo.FactCurrencyRate FCR ON\r\n        FCR.DateKey = FCRS.DateKey AND\r\n        FCR.CurrencyKey = C.CurrencyKey\r\nWHERE \r\n    FCR.CurrencyKey IS NULL\r\nORDER BY\r\n    FCRS.Date,\r\n    FCRS.CurrencyAlternateKey",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CurrencyKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CurrencyKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AverageRate",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "AverageRate",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "EndOfDayRate",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "EndOfDayRate",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Date",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FactCurrencyRateStaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "FactCurrencyRate",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "SubPipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AdventureWorksSource')]",
				"[concat(variables('factoryId'), '/datasets/CurrencyStaging')]",
				"[concat(variables('factoryId'), '/datasets/DimCurrency')]",
				"[concat(variables('factoryId'), '/datasets/FactCurrencyRateStaging')]",
				"[concat(variables('factoryId'), '/datasets/FactCurrencyRate')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DateTables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Populate DimDates",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AdventureWorksDW2022",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"parameters": [
										{
											"name": "StartYear",
											"type": "Int32",
											"value": "2005",
											"direction": "Input"
										},
										{
											"name": "EndYear",
											"type": "Int32",
											"value": "2014",
											"direction": "Input"
										}
									],
									"type": "NonQuery",
									"text": "DECLARE @Dates TABLE\r\n(\r\n    [DateKey] [int] NOT NULL,\r\n    [FullDateAlternateKey] [date] NOT NULL\r\n)\r\n\r\nDECLARE @Date DATE = CAST('1/1/' + CAST(@StartYear AS NVARCHAR(4)) AS DATE)\r\n\r\nWHILE YEAR(@Date) <= @EndYear\r\nBEGIN\r\n    \r\n    INSERT INTO @Dates\r\n    (\r\n        DateKey,\r\n        FullDateAlternateKey\r\n    )\r\n    VALUES\r\n    (\r\n        (\r\n            (YEAR(@Date) * 10000) + \r\n            (MONTH(@Date) * 100) + \r\n            DAY(@Date)\r\n        ),\r\n        @Date\r\n    )\r\n\r\n\r\n    SET @Date = DATEADD(DAY, 1, @Date)\r\n\r\nEND\r\n\r\n\r\nINSERT INTO dbo.DimDate\r\n(\r\n    [DateKey],\r\n    [FullDateAlternateKey],\r\n    [DayNumberOfWeek],\r\n    [EnglishDayNameOfWeek],\r\n    [SpanishDayNameOfWeek],\r\n    [FrenchDayNameOfWeek],\r\n    [DayNumberOfMonth],\r\n    [DayNumberOfYear],\r\n    [WeekNumberOfYear],\r\n    [EnglishMonthName],\r\n    [SpanishMonthName],\r\n    [FrenchMonthName],\r\n    [MonthNumberOfYear],\r\n    [CalendarQuarter],\r\n    [CalendarYear],\r\n    [CalendarSemester],\r\n    [FiscalQuarter],\r\n    [FiscalYear],\r\n    [FiscalSemester]\r\n)\r\nSELECT\r\n    [DateKey] = D.DateKey,\r\n    [FullDateAlternateKey] = D.FullDateAlternateKey,\r\n    [DayNumberOfWeek] = DATEPART(WEEKDAY, D.FullDateAlternateKey),\r\n    [EnglishDayNameOfWeek] = DWT.EnglishDayNameOfWeek,\r\n    [SpanishDayNameOfWeek] = DWT.SpanishDayNameOfWeek,\r\n    [FrenchDayNameOfWeek] = DWT.FrenchDayNameOfWeek,\r\n    [DayNumberOfMonth] = DAY(D.FullDateAlternateKey),\r\n    [DayNumberOfYear] = DATEPART(DAYOFYEAR, D.FullDateAlternateKey),\r\n    [WeekNumberOfYear] = DATEPART(WEEK, D.FullDateAlternateKey),\r\n    [EnglishMonthName] = MYT.EnglishMonthName,\r\n    [SpanishMonthName] = MYT.SpanishMonthName,\r\n    [FrenchMonthName] = MYT.FrenchMonthName,\r\n    [MonthNumberOfYear] = MONTH(D.FullDateAlternateKey),\r\n    [CalendarQuarter] = DATEPART(QUARTER, D.FullDateAlternateKey),\r\n    [CalendarYear] = YEAR(D.FullDateAlternateKey),\r\n    [CalendarSemester] = \r\n        CASE\r\n            WHEN MONTH(D.FullDateAlternateKey) <= 6 THEN 1\r\n            ELSE 2\r\n        END,\r\n    [FiscalQuarter] = \r\n        CASE \r\n            WHEN MONTH(D.FullDateAlternateKey) BETWEEN 1 AND 3 THEN 3\r\n            WHEN MONTH(D.FullDateAlternateKey) BETWEEN 4 AND 5 THEN 4\r\n            WHEN MONTH(D.FullDateAlternateKey) BETWEEN 7 AND 9 THEN 1\r\n            ELSE 2\r\n        END,\r\n    [FiscalYear] = \r\n        CASE\r\n            WHEN MONTH(D.FullDateAlternateKey) <= 6 THEN YEAR(D.FullDateAlternateKey)\r\n            ELSE YEAR(D.FullDateAlternateKey) + 1\r\n        END,\r\n    [FiscalSemester] = \r\n        CASE\r\n            WHEN MONTH(D.FullDateAlternateKey) <= 6 THEN 2\r\n            ELSE 1\r\n        END\r\nFROM \r\n    @Dates D LEFT JOIN\r\n    Integration.DayOfWeekType DWT ON\r\n        DWT.DayNumberOfWeek = DATEPART(WEEKDAY, D.FullDateAlternateKey) LEFT JOIN\r\n    Integration.MonthOfYearType MYT ON\r\n        MYT.MonthNumberOfYear = MONTH(D.FullDateAlternateKey) LEFT JOIN\r\n    dbo.DimDate D2 ON\r\n        D2.DateKey = D.DateKey\r\nWHERE\r\n    D2.DateKey IS NULL"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "SubPipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorksDW2022')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InternetSalesRelatedTables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Sales Reason Data to Staging",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n\t[SalesReasonAlternateKey] = SR.SalesReasonID,\n\t[SalesReasonName] = SR.[Name],\n\t[SalesReasonReasonType] = SR.ReasonType\nFROM \n\tSales.SalesReason SR\nORDER BY\n\tSR.SalesReasonID",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "DELETE Integration.SalesReasonStaging",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SalesReasonAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SalesReasonAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SalesReasonName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SalesReasonName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SalesReasonReasonType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SalesReasonReasonType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AdventureWorksSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SalesReasonStaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Migrate Sales Reason Staging Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Sales Reason Data to Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\n\t[SalesReasonAlternateKey] = SRS.SalesReasonAlternateKey,\n\t[SalesReasonName] = SRS.SalesReasonName,\n\t[SalesReasonReasonType] = SRS.SalesReasonReasonType\nFROM\n\tIntegration.SalesReasonStaging SRS LEFT JOIN\n\tdbo.DimSalesReason SR ON\n\t\tSR.SalesReasonAlternateKey = SRS.SalesReasonAlternateKey\nWHERE \n\tSR.SalesReasonKey IS NULL\nORDER BY\n\tSRS.SalesReasonAlternateKey",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SalesReasonAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SalesReasonAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SalesReasonName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SalesReasonName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SalesReasonReasonType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SalesReasonReasonType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesReasonStaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DimSalesReason",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Customer Data to Staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Migrate Sales Reason Staging Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "\r\nSELECT\r\n\t[CustomerAlternateKey] = CAST(C.AccountNumber AS NVARCHAR(15)),\r\n\t[GeographyCity] = A.City,\r\n\t[GeographyPostalCode] = A.PostalCode,\r\n\t[GeographyStateProvinceCode] = CAST(SP.StateProvinceCode AS NVARCHAR(3)),\r\n\t[GeographyCountryRegionCode] = SP.CountryRegionCode,\r\n\t[Title] = P.Title,\r\n\t[FirstName] = P.FirstName,\r\n\t[MiddleName] = P.MiddleName,\r\n\t[LastName] = P.LastName,\r\n\t[NameStyle] = P.NameStyle,\r\n\t[BirthDate] = PD.BirthDate,\r\n\t[MaritalStatus] = PD.MaritalStatus,\r\n\t[Suffix] = P.Suffix,\r\n\t[Gender] = PD.Gender,\r\n\t[EmailAddress] = E.EmailAddress,\r\n\t[YearlyIncome] = \r\n\t\tCASE\r\n\t\t\tWHEN CHARINDEX('-', PD.YearlyIncome, 0) > 0 THEN SUBSTRING(PD.YearlyIncome, CHARINDEX('-', PD.YearlyIncome, 0) + 1, LEN(PD.YearlyIncome) - CHARINDEX('-', PD.YearlyIncome, 0))\r\n\t\t\tWHEN CHARINDEX('greater than', PD.YearlyIncome, 0) > 0 THEN REPLACE(PD.YearlyIncome, 'greater than', '')\r\n\t\t\tELSE PD.YearlyIncome\r\n\t\tEND,\r\n\t[TotalChildren] = PD.TotalChildren,\r\n\t[NumberChildrenAtHome] = PD.NumberChildrenAtHome,\r\n\t[EnglishEducation] = PD.Education,\r\n\t[SpanishEducation] = CAST(ET.SpanishName AS NVARCHAR(40)),\r\n\t[FrenchEducation] = CAST(ET.FrenchName AS NVARCHAR(40)),\r\n\t[EnglishOccupation] = PD.Occupation,\r\n\t[SpanishOccupation] = OT.SpanishName,\r\n\t[FrenchOccupation] = OT.FrenchName,\r\n\t[HouseOwnerFlag] = PD.HomeOwnerFlag,\r\n\t[NumberCarsOwned] = PD.NumberCarsOwned,\r\n\t[AddressLine1] = A.AddressLine1,\r\n\t[AddressLine2] = A.AddressLine2,\r\n\t[Phone] = CASt(PP.PhoneNumber AS NVARCHAR(20)),\r\n\t[DateFirstPurchase] = PD.DateFirstPurchase,\r\n\t[CommuteDistance] = PD.CommuteDistance\r\nFROM \r\n\tSales.Customer C LEFT JOIN\r\n\tPerson.Person P ON\r\n\t\tP.BusinessEntityID = C.PersonID LEFT JOIN\r\n\tIntegration.PersonDemographics PD ON\r\n\t\tPD.BusinessEntityID = P.BusinessEntityID LEFT JOIN\r\n\tPerson.EmailAddress E ON\r\n\t\tE.BusinessEntityID = P.BusinessEntityID LEFT JOIN\r\n\tPerson.BusinessEntityAddress BEA ON\r\n\t\tBEA.BusinessEntityID = P.BusinessEntityID AND\r\n\t\tBEA.AddressTypeID = 2 LEFT JOIN\r\n\tPerson.Address A ON\r\n\t\tA.AddressID = BEA.AddressID \r\n\tCROSS APPLY\r\n\t(\r\n\t\tSELECT TOP 1\r\n\t\t\tPP.PhoneNumber\r\n\t\tFROM\r\n\t\t\tPerson.PersonPhone PP \r\n\t\tWHERE\r\n\t\t\tPP.BusinessEntityID = P.BusinessEntityID \r\n\t\tORDER BY\r\n\t\t\tPhoneNumberTypeID\r\n\t) PP LEFT JOIN\r\n\tPerson.StateProvince SP ON\r\n\t\tSP.StateProvinceID = A.StateProvinceID LEFT JOIN\r\n\tIntegration.EducationType ET ON \r\n\t\tET.Name = PD.Education LEFT JOIN\r\n\tIntegration.OccupationType OT ON \r\n\t\tOT.Name = PD.Occupation\r\nWHERE\r\n\tC.PersonID IS NOT NULL AND \r\n\tC.StoreID IS NULL\r\nORDER BY\r\n\tC.AccountNumber",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "DELETE Integration.CustomerStaging",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CustomerAlternateKey",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CustomerAlternateKey",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GeographyCity",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "GeographyCity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GeographyPostalCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "GeographyPostalCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GeographyStateProvinceCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "GeographyStateProvinceCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GeographyCountryRegionCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "GeographyCountryRegionCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Title",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Title",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MiddleName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MiddleName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LastName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LastName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NameStyle",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "NameStyle",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "BirthDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "BirthDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "MaritalStatus",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "MaritalStatus",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Suffix",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Suffix",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Gender",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "YearlyIncome",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "YearlyIncome",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "TotalChildren",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "TotalChildren",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "NumberChildrenAtHome",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "NumberChildrenAtHome",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "EnglishEducation",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EnglishEducation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SpanishEducation",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SpanishEducation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FrenchEducation",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FrenchEducation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EnglishOccupation",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EnglishOccupation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SpanishOccupation",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SpanishOccupation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FrenchOccupation",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FrenchOccupation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HouseOwnerFlag",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "HouseOwnerFlag",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "NumberCarsOwned",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "NumberCarsOwned",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "AddressLine1",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AddressLine1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AddressLine2",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AddressLine2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Phone",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Phone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DateFirstPurchase",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "DateFirstPurchase",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "CommuteDistance",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CommuteDistance",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AdventureWorksSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CustomerStaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Migrate Customer Staging Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Customer Data to Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\r\n    [GeographyKey] = G.GeographyKey,\r\n    [CustomerAlternateKey] = CS.CustomerAlternateKey,\r\n    [Title] = CS.Title,\r\n    [FirstName] = CS.FirstName,\r\n    [MiddleName] = CS.MiddleName,\r\n    [LastName] = CS.LastName,\r\n    [NameStyle] = CS.NameStyle,\r\n    [BirthDate] = CS.BirthDate,\r\n    [MaritalStatus] = CS.MaritalStatus,\r\n    [Suffix] = CS.Suffix,\r\n    [Gender] = CS.Gender,\r\n    [EmailAddress] = CS.EmailAddress,\r\n    [YearlyIncome] = CS.YearlyIncome,\r\n    [TotalChildren] = CS.TotalChildren,\r\n    [NumberChildrenAtHome] = CS.NumberChildrenAtHome,\r\n    [EnglishEducation] = CS.EnglishEducation,\r\n    [SpanishEducation] = CS.SpanishEducation,\r\n    [FrenchEducation] = CS.FrenchEducation,\r\n    [EnglishOccupation] = CS.EnglishOccupation,\r\n    [SpanishOccupation] = CS.SpanishOccupation,\r\n    [FrenchOccupation] = CS.FrenchOccupation,\r\n    [HouseOwnerFlag] = CS.HouseOwnerFlag,\r\n    [NumberCarsOwned] = CS.NumberCarsOwned,\r\n    [AddressLine1] = CS.AddressLine1,\r\n    [AddressLine2] = CS.AddressLine2,\r\n    [Phone] = CS.Phone,\r\n    [DateFirstPurchase] = CS.DateFirstPurchase,\r\n    [CommuteDistance] = CS.CommuteDistance\r\nFROM\r\n    Integration.CustomerStaging CS LEFT JOIN\r\n    dbo.DimGeography G ON\r\n        G.City = CS.GeographyCity AND\r\n        G.PostalCode = CS.GeographyPostalCode AND\r\n        G.StateProvinceCode = CS.GeographyStateProvinceCode AND\r\n        G.CountryRegionCode = CS.GeographyCountryRegionCode LEFT JOIN\r\n    dbo.DimCustomer C ON\r\n        C.CustomerAlternateKey = CS.CustomerAlternateKey \r\nWHERE \r\n    C.CustomerKey IS NULL\r\nORDER BY\r\n    CS.CustomerAlternateKey",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GeographyKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GeographyKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CustomerAlternateKey",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CustomerAlternateKey",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Title",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Title",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MiddleName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MiddleName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LastName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LastName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NameStyle",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "NameStyle",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "BirthDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "BirthDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "MaritalStatus",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "MaritalStatus",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Suffix",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Suffix",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Gender",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "YearlyIncome",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "YearlyIncome",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "TotalChildren",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "TotalChildren",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "NumberChildrenAtHome",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "NumberChildrenAtHome",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "EnglishEducation",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EnglishEducation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SpanishEducation",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SpanishEducation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FrenchEducation",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FrenchEducation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EnglishOccupation",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EnglishOccupation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SpanishOccupation",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SpanishOccupation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FrenchOccupation",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FrenchOccupation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HouseOwnerFlag",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "HouseOwnerFlag",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "NumberCarsOwned",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "NumberCarsOwned",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "AddressLine1",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AddressLine1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AddressLine2",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AddressLine2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Phone",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Phone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DateFirstPurchase",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "DateFirstPurchase",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "CommuteDistance",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CommuteDistance",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CustomerStaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DimCustomer",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Fact Internet Sales Data to Staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Migrate Customer Staging Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n\t[ProductAlternateKey] = P.ProductNumber,\n\t[OrderDateKey] = (\n\t\t(YEAR(SOH.OrderDate) * 10000) +\n\t\t(MONTH(SOH.OrderDate) * 100) + \n\t\tDAY(SOH.OrderDate)\n\t),\n\t[DueDateKey] = (\n\t\t(YEAR(SOH.DueDate) * 10000) +\n\t\t(MONTH(SOH.DueDate) * 100) + \n\t\tDAY(SOH.DueDate)\n\t),\n\t[ShipDateKey] = (\n\t\t(YEAR(SOH.ShipDate) * 10000) +\n\t\t(MONTH(SOH.ShipDate) * 100) + \n\t\tDAY(SOH.ShipDate)\n\t),\n\t[CustomerAlternateKey] = CAST(C.AccountNumber AS NVARCHAR(50)),\n\t[PromotionAlternateKey] = SOD.SpecialOfferID,\n\t[CurrencyAlternateKey] = ISNULL(CR.ToCurrencyCode, 'USD'),\n\t[SalesTerritoryAlternateKey] = SOH.TerritoryID,\n\t[SalesOrderNumber] = CAST(SOH.SalesOrderNumber AS NVARCHAR(20)),\n\t[SalesOrderLineNumber] = (\n\t\tROW_NUMBER() OVER(\n\t\t\tPARTITION BY \n\t\t\t\tSOD.SalesOrderID \n\t\t\tORDER BY \n\t\t\t\tSOD.SalesOrderDetailID ASC\n\t\t)\n\t),\n\t[RevisionNumber] = SOH.RevisionNumber,\n\t[OrderQuantity] = SOD.OrderQty,\n\t[UnitPrice] = SOD.UnitPrice,\n\t[ExtendedAmount] = SOD.UnitPrice * SOD.OrderQty,\n\t[UnitPriceDiscountPct] = SOD.UnitPriceDiscount,\n\t[DiscountAmount] = (\n\t\tSOD.UnitPrice * \n\t\tSOD.OrderQty *\n\t\tSOD.UnitPriceDiscount\n\t),\n\t[ProductStandardCost] = COALESCE(PCH.StandardCost, P.StandardCost),\n\t[TotalProductCost] = (\n\t\tCOALESCE(PCH.StandardCost, P.StandardCost) *\n\t\tSOD.OrderQty\n\t),\n\t[SalesAmount] = SOD.LineTotal,\n\t[TaxAmt] = ROUND(\n\t\t(\n\t\t\t(SOD.LineTotal / SOH.SubTotal) * \n\t\t\tSOH.TaxAmt\n\t\t),\n\t\t4\n\t),\n\t[Freight] = ROUND(\n\t\t(\n\t\t\t(SOD.LineTotal / SOH.SubTotal) * \n\t\t\tSOH.Freight\n\t\t),\n\t\t4\n\t),\n\t[CarrierrTrackingNumber] = SOD.CarrierTrackingNumber,\n\t[CustomerPONumber] = SOH.PurchaseOrderNumber,\n\t[OrderDate] = SOH.OrderDate,\n\t[DueDate] = SOH.DueDate,\n\t[ShipDate] = SOH.ShipDate\nFROM \n\tSales.Customer C LEFT JOIN\n\tSales.SalesOrderHeader SOH ON \n\t\tSOH.CustomerID = C.CustomerID LEFT JOIN\n\tSales.SalesOrderDetail SOD ON\n\t\tSOD.SalesOrderID = SOH.SalesOrderID LEFT JOIN\n\tProduction.[Product] P ON\n\t\tP.ProductID = SOD.ProductID LEFT JOIN\n\tProduction.ProductCostHistory PCH ON \n\t\tPCH.ProductID = SOD.ProductID \n\t\tAND\n\t\tSOH.OrderDate >= PCH.StartDate AND \n\t\t(\n\t\t\tSOH.OrderDate <= PCH.EndDate OR \n\t\t\tPCH.EndDate IS NULL\n\t\t) \n\t\tLEFT JOIN\n\tSales.CurrencyRate CR ON\n\t\tCR.CurrencyRateID = SOH.CurrencyRateID \nWHERE\n\tC.PersonID IS NOT NULL AND\n\tC.StoreID IS NULL \nORDER BY\n\tSOH.SalesOrderNumber,\n\t(\n\t\tROW_NUMBER() OVER(\n\t\t\tPARTITION BY \n\t\t\t\tSOD.SalesOrderID \n\t\t\tORDER BY \n\t\t\t\tSOD.SalesOrderDetailID ASC\n\t\t)\n\t)",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "DELETE Integration.FactInternetSalesStaging",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ProductAlternateKey",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ProductAlternateKey",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OrderDateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "OrderDateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DueDateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DueDateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ShipDateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ShipDateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CustomerAlternateKey",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CustomerAlternateKey",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PromotionAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PromotionAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CurrencyAlternateKey",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "CurrencyAlternateKey",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SalesTerritoryAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SalesTerritoryAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SalesOrderNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SalesOrderNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SalesOrderLineNumber",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "SalesOrderLineNumber",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "RevisionNumber",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "RevisionNumber",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "OrderQuantity",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "OrderQuantity",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "UnitPrice",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "ExtendedAmount",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "ExtendedAmount",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "UnitPriceDiscountPct",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "UnitPriceDiscountPct",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "DiscountAmount",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "DiscountAmount",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "ProductStandardCost",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "ProductStandardCost",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "TotalProductCost",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "TotalProductCost",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "SalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										},
										"sink": {
											"name": "SalesAmount",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "TaxAmt",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										},
										"sink": {
											"name": "TaxAmt",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "Freight",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										},
										"sink": {
											"name": "Freight",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "CarrierrTrackingNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CarrierTrackingNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CustomerPONumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CustomerPONumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OrderDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "OrderDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DueDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DueDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ShipDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ShipDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AdventureWorksSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "FactInternetSalesStaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Migrate Fact Internet Sales Staging Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Fact Internet Sales Data to Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT\n\t[ProductKey] = P.ProductKey,\n\t[OrderDateKey] = FISS.OrderDateKey,\n\t[DueDateKey] = FISS.DueDateKey,\n\t[ShipDateKey] = FISS.ShipDateKey,\n\t[CustomerKey] = C.CustomerKey,\n\t[PromotionKey] = PR.PromotionKey,\n\t[CurrencyKey] = CR.CurrencyKey,\n\t[SalesTerritoryKey] = ST.SalesTerritoryKey,\n\t[SalesOrderNumber] = FISS.SalesOrderNumber,\n\t[SalesOrderLineNumber] = FISS.SalesOrderLineNumber,\n\t[RevisionNumber] = FISS.RevisionNumber,\n\t[OrderQuantity] = FISS.OrderQuantity,\n\t[UnitPrice] = FISS.UnitPrice,\n\t[ExtendedAmount] = FISS.ExtendedAmount,\n\t[UnitPriceDiscountPct] = FISS.UnitPriceDiscountPct,\n\t[DiscountAmount] = FISS.DiscountAmount,\n\t[ProductStandardCost] = FISS.ProductStandardCost,\n\t[TotalProductCost] = FISS.TotalProductCost,\n\t[SalesAmount] = FISS.SalesAmount,\n\t[TaxAmt] = FISS.TaxAmt,\n\t[Freight] = FISS.Freight,\n\t[CarrierTrackingNumber] = FISS.CarrierTrackingNumber,\n\t[CustomerPONumber] = FISS.CustomerPONumber,\n\t[OrderDate] = FISS.OrderDate,\n\t[DueDate] = FISS.DueDate,\n\t[ShipDate] = FISS.ShipDate\nFROM\n\tIntegration.FactInternetSalesStaging FISS \n\tCROSS APPLY\n\t(\n\t\tSELECT TOP 1\n\t\t\tP.ProductKey\n\t\tFROM\t\n\t\t\tdbo.DimProduct P \n\t\tWHERE\n\t\t\tP.ProductAlternateKey = FISS.ProductAlternateKey \n\t\tORDER BY\n\t\t\tP.Status DESC,\n\t\t\tP.StartDate DESC\n\t) P LEFT JOIN\n\tdbo.DimCustomer C ON\n\t\tC.CustomerAlternateKey = FISS.CustomerAlternateKey LEFT JOIN\n\tdbo.DimPromotion PR ON\n\t\tPR.PromotionAlternateKey = FISS.PromotionAlternateKey LEFT JOIN\n\tdbo.DimCurrency CR ON\n\t\tCR.CurrencyAlternateKey = FISS.CurrencyAlternateKey LEFT JOIN\n\tdbo.DimSalesTerritory ST ON\n\t\tST.SalesTerritoryAlternateKey = FISS.SalesTerritoryAlternateKey LEFT JOIN\n\tdbo.FactInternetSales FIS ON\n\t\tFIS.SalesOrderNumber = FISS.SalesOrderNumber AND\n\t\tFIS.SalesOrderLineNumber = FISS.SalesOrderLineNumber\nWHERE \n\tFIS.SalesOrderNumber IS NULL\nORDER BY\n\tFISS.SalesOrderNumber,\n\tFISS.SalesOrderLineNumber",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ProductKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ProductKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "OrderDateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "OrderDateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DueDateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DueDateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ShipDateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ShipDateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CustomerKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PromotionKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PromotionKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CurrencyKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CurrencyKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SalesTerritoryKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SalesTerritoryKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SalesOrderNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SalesOrderNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SalesOrderLineNumber",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "SalesOrderLineNumber",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "RevisionNumber",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "RevisionNumber",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "OrderQuantity",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "OrderQuantity",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "UnitPrice",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "ExtendedAmount",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "ExtendedAmount",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "UnitPriceDiscountPct",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "UnitPriceDiscountPct",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "DiscountAmount",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "DiscountAmount",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "ProductStandardCost",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "ProductStandardCost",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "TotalProductCost",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "TotalProductCost",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "SalesAmount",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "SalesAmount",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "TaxAmt",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "TaxAmt",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "Freight",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "Freight",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "CarrierTrackingNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CarrierTrackingNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CustomerPONumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CustomerPONumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OrderDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "OrderDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DueDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DueDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ShipDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ShipDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FactInternetSalesStaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "FactInternetSales",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Fact Internet Sales Reason Data to Staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Migrate Fact Internet Sales Staging Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\r\n    [SalesOrderNumber] = CAST(SOH.SalesOrderNumber AS NVARCHAR(20)),\r\n    [SalesOrderLineNumber] = SOH.SalesOrderLineNumber,\r\n    [SalesReasonAlternateKey] = SOHSR.SalesReasonID\r\nFROM\r\n    Sales.SalesOrderHeaderSalesReason SOHSR \r\n    CROSS APPLY\r\n    (\r\n        SELECT\r\n            [SalesOrderNumber] = SOH.SalesOrderNumber,\r\n            [SalesOrderLineNumber] = (\r\n                ROW_NUMBER() OVER(\r\n                    PARTITION BY \r\n                        SOD.SalesOrderID \r\n                    ORDER BY \r\n                        SOD.SalesOrderDetailID ASC\r\n                )\r\n            )\r\n        FROM\r\n            Sales.SalesOrderHeader SOH JOIN\r\n            Sales.SalesOrderDetail SOD ON\r\n                SOD.SalesOrderID = SOH.SalesOrderID \r\n        WHERE\r\n            SOH.SalesOrderID = SOHSR.SalesOrderID\r\n    ) SOH\r\nORDER BY\r\n    SOH.SalesOrderNumber,\r\n    SOH.salesOrderLineNumber,\r\n    SOHSR.SalesReasonID",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "DELETE Integration.FactInternetSalesReasonStaging",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SalesOrderNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SalesOrderNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SalesOrderLineNumber",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "SalesOrderLineNumber",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "SalesReasonAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SalesReasonAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AdventureWorksSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "FactInternetSalesReasonStaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Migrate Fact Internet Sales Reason Staging Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Fact Internet Sales Reason Data to Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\n\t[SalesOrderNumber] = FISRS.SalesOrderNumber,\n\t[SalesOrderLineNumber] = FISRS.SalesOrderLineNumber,\n\t[SalesReasonKey] = SR.SalesReasonKey\t\nFROM\n\tIntegration.FactInternetSalesReasonStaging FISRS LEFT JOIN\n\tdbo.DimSalesReason SR ON\n\t\tSR.SalesReasonAlternateKey = FISRS.SalesReasonAlternateKey LEFT JOIN\n\tdbo.FactInternetSalesReason FISR ON\n\t\tFISR.SalesOrderNumber = FISRS.SalesOrderNumber AND\n\t\tFISR.SalesOrderLineNumber = FISRS.SalesOrderLineNumber\nWHERE \n\tFISR.SalesOrderNumber IS NULL\nORDER BY\n\tFISRS.SalesOrderNumber,\n\tFISRS.salesOrderLineNumber,\n\tFISRS.SalesReasonAlternateKey",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SalesOrderNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SalesOrderNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SalesOrderLineNumber",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "SalesOrderLineNumber",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "SalesReasonKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SalesReasonKey",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FactInternetSalesReasonStaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "FactInternetSalesReason",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "SubPipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AdventureWorksSource')]",
				"[concat(variables('factoryId'), '/datasets/SalesReasonStaging')]",
				"[concat(variables('factoryId'), '/datasets/DimSalesReason')]",
				"[concat(variables('factoryId'), '/datasets/CustomerStaging')]",
				"[concat(variables('factoryId'), '/datasets/DimCustomer')]",
				"[concat(variables('factoryId'), '/datasets/FactInternetSalesStaging')]",
				"[concat(variables('factoryId'), '/datasets/FactInternetSales')]",
				"[concat(variables('factoryId'), '/datasets/FactInternetSalesReasonStaging')]",
				"[concat(variables('factoryId'), '/datasets/FactInternetSalesReason')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LocationRelatedTables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Migrate Sales Territory Data To Staging",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\r\n    [SalesTerritoryAlternateKey] = ST.TerritoryID,\r\n    [SalesTerrirtoryRegion] = ST.Name,\r\n    [SalesTerritoryCountry] = CR.Name,\r\n    [SalesTerritoryGroup] = ST.[Group]\r\nFROM\r\n    Sales.SalesTerritory ST LEFT JOIN\r\n    Person.CountryRegion CR ON\r\n        CR.CountryRegionCode = ST.CountryRegionCode\r\nORDER BY\r\n    ST.TerritoryID",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "DELETE Integration.SalesTerritoryStaging",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SalesTerritoryAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SalesTerritoryAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SalesTerrirtoryRegion",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SalesTerritoryRegion",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SalesTerritoryCountry",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SalesTerritoryCountry",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SalesTerritoryGroup",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SalesTerritoryGroup",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AdventureWorksSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SalesTerritoryStaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Migrate Sales Territory Staging Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Migrate Sales Territory Data To Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\r\n    [SalesTerritoryAlternateKey] = STS.SalesTerritoryAlternateKey,\r\n    [SalesTerritoryRegion] = STS.SalesTerritoryRegion,\r\n    [SalesTerritoryCountry] = STS.SalesTerritoryCountry,\r\n    [SalesTerritoryGroup] = STS.SalesTerritoryGroup\r\nFROM\r\n    Integration.SalesTerritoryStaging STS LEFT JOIN\r\n    dbo.DimSalesTerritory ST ON\r\n        ST.SalesTerritoryAlternateKey = STS.SalesTerritoryAlternateKey\r\nWHERE \r\n    ST.SalesTerritoryKey IS NULL\r\n\r\nUNION ALL\r\n\r\nSELECT\r\n    ST0.SalesTerritoryAlternateKey,\r\n    ST0.SalesTerritoryRegion,\r\n    ST0.SalesTerritoryCountry,\r\n    ST0.SalesTerritoryGroup\r\nFROM\r\n    (\r\n        SELECT\r\n            [SalesTerritoryAlternateKey] = 0,\r\n            [SalesTerritoryRegion] = 'NA',\r\n            [SalesTerritoryCountry] = 'NA',\r\n            [SalesTerritoryGroup] = 'NA'\r\n    ) ST0 LEFT JOIN\r\n    dbo.DimSalesTerritory ST On\r\n        ST.SalesTerritoryAlternateKey = ST0.SalesTerritoryAlternateKey\r\nWHERE\r\n    ST.SalesTerritoryKey IS NULL",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SalesTerritoryAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SalesTerritoryAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SalesTerritoryRegion",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SalesTerritoryRegion",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SalesTerritoryCountry",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SalesTerritoryCountry",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SalesTerritoryGroup",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SalesTerritoryGroup",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesTerritoryStaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DimSalesTerritory",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Migrate Geography Data to Staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Migrate Sales Territory Staging Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT\n\t[City] = AD.City, \n\t[StateProvinceCode] = SP.StateProvinceCode, \n\t[StateProvinceName] = SP.Name,\n\t[CountryRegionCode] = SP.CountryRegionCode,\n\t[EnglishCountryRegionName] = CR.Name,\n\t[SpanishCountryRegionName] = ICR.SpanishCountryRegionName,\n\t[FrenchCountryRegionName] = ICR.FrenchCountryRegionName,\n\t[PostalCode] = AD.PostalCode,\n\t[SalesTerritoryAlternateKey] = SP.TerritoryID\nFROM\n\tPerson.Address AD LEFT JOIN\n\tPerson.StateProvince SP ON\n\t\tSP.StateProvinceID = AD.StateProvinceID LEFT JOIN\n\tPerson.CountryRegion CR ON\n\t\tCR.CountryRegionCode = SP.CountryRegionCode LEFT JOIN\n\tIntegration.CountryRegion ICR ON\n\t\tICR.CountryRegionName = CR.Name\nORDER BY\n\tCR.Name,\n\tSP.Name,\n\tAD.City,\n\tAD.PostalCode",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "DELETE Integration.GeographyStaging",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "City",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "City",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StateProvinceCode",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "StateProvinceCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StateProvinceName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StateProvinceName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CountryRegionCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CountryRegionCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EnglishCountryRegionName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EnglishCountryRegionName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SpanishCountryRegionName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SpanishCountryRegionName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FrenchCountryRegionName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FrenchCountryRegionName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PostalCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PostalCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SalesTerritoryAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SalesTerritoryAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AdventureWorksSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "GeographyStaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Migrate Geography Staging Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Migrate Geography Data to Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\r\n    [City] = GS.City,\r\n    [StateProvinceCode] = GS.StateProvinceCode,\r\n    [StateProvinceName] = GS.StateProvinceName,\r\n    [CountryRegionCode] = GS.CountryRegionCode,\r\n    [EnglishCountryRegionName] = GS.EnglishCountryRegionName,\r\n    [SpanishCountryRegionName] = GS.SpanishCountryRegionName,\r\n    [FrenchCountryRegionName] = GS.FrenchCountryRegionName,\r\n    [PostalCode] = GS.PostalCode,\r\n    [SalesTerritoryKey] = ST.SalesTerritoryKey\r\nFROM\r\n    Integration.GeographyStaging GS LEFT JOIN\r\n    dbo.DimSalesTerritory ST ON\r\n        ST.SalesTerritoryAlternateKey = GS.SalesTerritoryAlternateKey LEFT JOIN\r\n    dbo.DimGeography G ON\r\n        G.City = GS.City AND\r\n        G.PostalCode = GS.PostalCode AND\r\n        G.StateProvinceCode = GS.StateProvinceCode AND\r\n        G.CountryRegionCode = GS.CountryRegionCode \r\nWHERE \r\n    G.GeographyKey IS NULL\r\nORDER BY\r\n    GS.EnglishCountryRegionName,\r\n    GS.StateProvinceName,\r\n    GS.City,\r\n    GS.PostalCode",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "City",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "City",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StateProvinceCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StateProvinceCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StateProvinceName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "StateProvinceName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CountryRegionCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CountryRegionCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EnglishCountryRegionName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EnglishCountryRegionName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SpanishCountryRegionName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SpanishCountryRegionName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FrenchCountryRegionName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FrenchCountryRegionName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PostalCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PostalCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SalesTerritoryKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SalesTerritoryKey",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "GeographyStaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DimGeography",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "SubPipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AdventureWorksSource')]",
				"[concat(variables('factoryId'), '/datasets/SalesTerritoryStaging')]",
				"[concat(variables('factoryId'), '/datasets/DimSalesTerritory')]",
				"[concat(variables('factoryId'), '/datasets/GeographyStaging')]",
				"[concat(variables('factoryId'), '/datasets/DimGeography')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Main')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DateTables",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DateTables",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ProductRelatedTables",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ProductRelatedTables",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CurrencyRelatedTables",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DateTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CurrencyRelatedTables",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "LocationRelatedTables",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "LocationRelatedTables",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PromotionRelatedTables",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PromotionRelatedTables",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "InternetSalesRelatedTables",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ProductRelatedTables",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LocationRelatedTables",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PromotionRelatedTables",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CurrencyRelatedTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "InternetSalesRelatedTables",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ResellerSalesRelatedTables",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CurrencyRelatedTables",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ProductRelatedTables",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LocationRelatedTables",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PromotionRelatedTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ResellerSalesRelatedTables",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/DateTables')]",
				"[concat(variables('factoryId'), '/pipelines/ProductRelatedTables')]",
				"[concat(variables('factoryId'), '/pipelines/CurrencyRelatedTables')]",
				"[concat(variables('factoryId'), '/pipelines/LocationRelatedTables')]",
				"[concat(variables('factoryId'), '/pipelines/PromotionRelatedTables')]",
				"[concat(variables('factoryId'), '/pipelines/InternetSalesRelatedTables')]",
				"[concat(variables('factoryId'), '/pipelines/ResellerSalesRelatedTables')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProductRelatedTables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Product Category Data To Staging",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\r\n    [ProductCategoryAlternateKey] = PC.ProductCategoryID,\r\n    [EnglishProductCategoryName] = PC.Name,\r\n    [SpanishProductCategoryName] = PCT.SpanishName,\r\n    [FrenchProductCategoryName] = PCT.FrenchName\r\nFROM\r\n    Production.ProductCategory PC LEFT JOIN\r\n    Integration.ProductCategoryType PCT ON\r\n        PCT.Name = PC.Name\r\nORDER BY\r\n    PC.ProductCategoryID ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "DELETE Integration.ProductCategoryStaging;",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ProductCategoryAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ProductCategoryAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EnglishProductCategoryName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EnglishProductCategoryName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SpanishProductCategoryName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SpanishProductCategoryName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FrenchProductCategoryName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FrenchProductCategoryName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AdventureWorksSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ProductCategoryStaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Migrate Product Category Staging Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Product Category Data To Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n\tPSD.ProductCategoryAlternateKey,\n\tPSD.EnglishProductCategoryName,\n\tPSD.SpanishProductCategoryName,\n\tPSD.FrenchProductCategoryName\nFROM \n\tIntegration.ProductCategoryStaging PSD LEFT JOIN\n\tdbo.DimProductCategory PD ON \n\t\tPD.ProductCategoryAlternateKey = PSD.ProductCategoryAlternateKey\nWHERE\n\tPD.ProductCategoryAlternateKey IS NULL\nORDER BY\n\tPSD.ProductCategoryAlternateKey",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ProductCategoryAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ProductCategoryAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EnglishProductCategoryName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EnglishProductCategoryName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SpanishProductCategoryName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SpanishProductCategoryName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FrenchProductCategoryName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FrenchProductCategoryName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ProductCategoryStaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DimProductCategory",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Product Sub Category Data To Staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Migrate Product Category Staging Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\r\n    [ProductSubcategoryAlternateKey] = PSC.ProductSubcategoryID,\r\n    [EnglishProductSubcategoryName] = PSC.Name,\r\n    [SpanishProductSubcategoryName] = PSCT.SpanishName,\r\n    [FrenchProductSubcategoryName] = PSCT.FrenchName,\r\n    [ProductCategoryAlternateKey] = PSC.ProductCategoryID\r\nFROM\r\n    Production.ProductSubcategory PSC LEFT JOIN\r\n    Integration.ProductSubcategoryType PSCT ON\r\n        PSCT.Name = PSC.Name\r\nORDER BY\r\n    PSC.ProductSubcategoryID",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "DELETE Integration.ProductSubcategoryStaging;",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ProductSubcategoryAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ProductSubcategoryAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EnglishProductSubcategoryName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EnglishProductSubcategoryName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SpanishProductSubcategoryName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SpanishProductSubcategoryName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FrenchProductSubcategoryName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FrenchProductSubcategoryName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ProductCategoryAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ProductCategoryAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AdventureWorksSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ProductSubcategoryStaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Migrate Product Sub Category Staging Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Product Sub Category Data To Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\r\n    [ProductSubcategoryAlternateKey] = PST.ProductSubcategoryAlternateKey,\r\n    [EnglishProductSubcategoryName] = PST.EnglishProductSubcategoryName,\r\n    [SpanishProductSubcategoryName] = PST.SpanishProductSubcategoryName,\r\n    [FrenchProductSubcategoryName] = PST.FrenchProductSubcategoryName,\r\n    [ProductCategoryKey] = PC.ProductCategoryKey\r\nFROM\r\n    Integration.ProductSubcategoryStaging PST LEFT JOIN\r\n    dbo.DimProductCategory PC ON\r\n        PC.ProductCategoryAlternateKey = PST.ProductCategoryAlternateKey LEFT JOIN\r\n    dbo.DimProductSubcategory PS ON\r\n        PS.ProductSubcategoryAlternateKey = PST.ProductSubcategoryAlternateKey\r\nWHERE\r\n    PS.ProductSubcategoryKey IS NULL",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ProductSubcategoryAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ProductSubcategoryAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EnglishProductSubcategoryName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EnglishProductSubcategoryName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SpanishProductSubcategoryName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SpanishProductSubcategoryName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FrenchProductSubcategoryName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FrenchProductSubcategoryName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ProductCategoryKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ProductCategoryKey",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DimProductSubCategory",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DimProductSubCategory",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Product Data To Staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Migrate Product Sub Category Staging Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \r\n    [ProductAlternateKey] = P.ProductNumber,\r\n    [ProductSubcategoryAlternateKey] = P.ProductSubcategoryID,\r\n    [WeightUnitMeasureCode] = P.WeightUnitMeasureCode,\r\n    [SizeUnitMeasureCode] = P.SizeUnitMeasureCode,\r\n    [EnglishProductName] = P.[Name],\r\n    [SpanishProductName] = PNT.SpanishName,\r\n    [FrenchProductName] = PNT.FrenchName,\r\n    [StandardCost] = \r\n        CASE \r\n            WHEN PCH.StartDate IS NOT NULL THEN PCH.StandardCost\r\n            ELSE P.StandardCost\r\n        END,\r\n    [FinishedGoodsFlag] = P.FinishedGoodsFlag,\r\n    [Color] = ISNULL(P.Color, 'NA'),\r\n    [SafetyStockLevel] = P.SafetyStockLevel,\r\n    [ReorderPoint] = P.ReorderPoint,\r\n    [ListPrice] = \r\n        CASE\r\n            WHEN PLPH.StartDate IS NOT NULL THEN PLPH.ListPrice\r\n            ELSE P.ListPrice\r\n        END,\r\n    [Size] = P.Size,\r\n    [SizeRange] = ISNULL(SRT.SizeRange, 'NA'),\r\n    [Weight] = P.[Weight],\r\n    [DaysToManufacture] = P.DaysToManufacture,\r\n    [ProductLine] = P.ProductLine,\r\n    [DealerPrice] = NULL,\r\n    [Class] = P.Class,\r\n    [Style] = P.Style,\r\n    [ModelName] = PM.Name,\r\n    [LargePhoto] = PP.LargePhoto,\r\n    [EnglishDescription] = PD.Description,\r\n    [FrenchDescription] = PD2.Description,\r\n    [ChineseDescription] = PD3.Description,\r\n    [ArabicDescription] = PD4.Description,\r\n    [HebrewDescription] = PD5.Description,\r\n    [ThaiDescription] = PD6.Description,\r\n    [GermanDescription] = PDT.GermanDescription,\r\n    [JapaneseDescription] = PDT.JapaneseDescription,\r\n    [TurkishDescription] = PDT.TurkishDescription,\r\n    [StartDate] = PCH.StartDate,\r\n    [EndDate] = PCH.EndDate,\r\n    [Status] = CAST(\r\n        CASE \r\n            WHEN PLPH.EndDate IS NULL THEN 'Current'\r\n            ELSE NULL\r\n        END AS NVARCHAR(7)\r\n    )\r\nFROM \r\n    Production.[Product] P LEFT JOIN\r\n    Production.ProductListPriceHistory PLPH ON\r\n        PLPH.ProductID = P.ProductID LEFT JOIN\r\n    Production.ProductCostHistory PCH ON\r\n        PCH.ProductID = P.ProductID AND\r\n        PLPH.StartDate = PCH.StartDate LEFT JOIN\r\n    Production.ProductModel PM ON\r\n        PM.ProductModelID = P.ProductModelID LEFT JOIN\r\n    Production.ProductProductPhoto PPP ON\r\n        PPP.ProductID = P.ProductID LEFT JOIN\r\n    Production.ProductPhoto PP ON\r\n        PP.ProductPhotoID = PPP.ProductPhotoID LEFT JOIN\r\n    Production.ProductModelProductDescriptionCulture PMDC ON\r\n        PMDC.ProductModelID = PM.ProductModelID AND\r\n        PMDC.CultureID = 'en' LEFT JOIN\r\n    Production.ProductDescription PD ON\r\n        PD.ProductDescriptionID = PMDC.ProductDescriptionID LEFT JOIN\r\n    Production.ProductModelProductDescriptionCulture PMDC2 ON\r\n        PMDC2.ProductModelID = PM.ProductModelID AND\r\n        PMDC2.CultureID = 'fr' LEFT JOIN\r\n    Production.ProductDescription PD2 ON\r\n        PD2.ProductDescriptionID = PMDC2.ProductDescriptionID LEFT JOIN \r\n    Production.ProductModelProductDescriptionCulture PMDC3 ON\r\n        PMDC3.ProductModelID = PM.ProductModelID AND\r\n        PMDC3.CultureID = 'zh-cht' LEFT JOIN\r\n    Production.ProductDescription PD3 ON\r\n        PD3.ProductDescriptionID = PMDC3.ProductDescriptionID LEFT JOIN\r\n    Production.ProductModelProductDescriptionCulture PMDC4 ON\r\n        PMDC4.ProductModelID = PM.ProductModelID AND\r\n        PMDC4.CultureID = 'ar' LEFT JOIN\r\n    Production.ProductDescription PD4 ON\r\n        PD4.ProductDescriptionID = PMDC4.ProductDescriptionID LEFT JOIN\r\n    Production.ProductModelProductDescriptionCulture PMDC5 ON\r\n        PMDC5.ProductModelID = PM.ProductModelID AND\r\n        PMDC5.CultureID = 'he' LEFT JOIN\r\n    Production.ProductDescription PD5 ON\r\n        PD5.ProductDescriptionID = PMDC5.ProductDescriptionID LEFT JOIN\r\n    Production.ProductModelProductDescriptionCulture PMDC6 ON\r\n        PMDC6.ProductModelID = PM.ProductModelID AND\r\n        PMDC6.CultureID = 'th' LEFT JOIN\r\n    Production.ProductDescription PD6 ON\r\n        PD6.ProductDescriptionID = PMDC6.ProductDescriptionID LEFT JOIN\r\n    Integration.ProductDescriptionType PDT ON\r\n        PDT.Description = PD.Description LEFT JOIN\r\n    Integration.ProductNameType PNT ON\r\n        PNT.Name = P.Name LEFT JOIN\r\n    Integration.SizeRangeType SRT ON \r\n        SRT.Size = P.Size\r\nORDER BY\r\n    P.ProductID",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "DELETE Integration.ProductStaging",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ProductAlternateKey",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ProductAlternateKey",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ProductSubcategoryAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ProductSubcategoryAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "WeightUnitMeasureCode",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "WeightUnitMeasureCode",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "SizeUnitMeasureCode",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "SizeUnitMeasureCode",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "EnglishProductName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EnglishProductName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SpanishProductName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SpanishProductName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FrenchProductName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FrenchProductName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StandardCost",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "StandardCost",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "FinishedGoodsFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "FinishedGoodsFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Color",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Color",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SafetyStockLevel",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "SafetyStockLevel",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "ReorderPoint",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "ReorderPoint",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "ListPrice",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "ListPrice",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "Size",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Size",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SizeRange",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SizeRange",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Weight",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 8
										},
										"sink": {
											"name": "Weight",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "DaysToManufacture",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DaysToManufacture",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ProductLine",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "ProductLine",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "DealerPrice",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DealerPrice",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "Class",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Class",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Style",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Style",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "ModelName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ModelName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LargePhoto",
											"type": "Byte[]",
											"physicalType": "varbinary"
										},
										"sink": {
											"name": "LargePhoto",
											"type": "Byte[]",
											"physicalType": "varbinary"
										}
									},
									{
										"source": {
											"name": "EnglishDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EnglishDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FrenchDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FrenchDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ChineseDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ChineseDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ArabicDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ArabicDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HebrewDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "HebrewDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ThaiDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ThaiDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GermanDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "GermanDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "JapaneseDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "JapaneseDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TurkishDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "TurkishDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "StartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "EndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AdventureWorksSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ProductStaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Migrate Product Staging Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Product Data To Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\r\n    [ProductAlternateKey] = PS.ProductAlternateKey,\r\n    [ProductSubcategoryKey] = PSC.ProductSubcategoryKey,\r\n    [WeightUnitMeasureCode] = PS.WeightUnitMeasureCode,\r\n    [SizeUnitMeasureCode] = PS.SizeUnitMeasureCode,\r\n    [EnglishProductName] = PS.EnglishProductName,\r\n    [SpanishProductName] = PS.SpanishProductName,\r\n    [FrenchProductName] = PS.FrenchProductName,\r\n    [StandardCost] = PS.StandardCost,\r\n    [FinishedGoodsFlag] = PS.FinishedGoodsFlag,\r\n    [Color] = PS.Color,\r\n    [SafetyStockLevel] = PS.SafetyStockLevel,\r\n    [ReorderPoint] = PS.ReorderPoint,\r\n    [ListPrice] = PS.ListPrice,\r\n    [Size] = PS.Size,\r\n    [SizeRange] = PS.SizeRange,\r\n    [Weight] = PS.Weight,\r\n    [DaysToManufacture] = PS.DaysToManufacture,\r\n    [ProductLine] = PS.ProductLine,\r\n    [DealerPrice] = PS.DealerPrice,\r\n    [Class] = PS.Class,\r\n    [Style] = PS.Style,\r\n    [ModelName] = PS.ModelName,\r\n    [LargePhoto] = PS.LargePhoto,\r\n    [EnglishDescription] = PS.EnglishDescription,\r\n    [FrenchDescription] = PS.FrenchDescription,\r\n    [ChineseDescription] = PS.ChineseDescription,\r\n    [ArabicDescription] = PS.ArabicDescription,\r\n    [HebrewDescription] = PS.HebrewDescription,\r\n    [ThaiDescription] = PS.ThaiDescription,\r\n    [GermanDescription] = PS.GermanDescription,\r\n    [JapaneseDescription] = PS.JapaneseDescription,\r\n    [TurkishDescription] = PS.TurkishDescription,\r\n    [StartDate] = PS.StartDate,\r\n    [EndDate] = PS.EndDate,\r\n    [Status] = PS.Status\r\nFROM\r\n    Integration.ProductStaging PS LEFT JOIN\r\n    dbo.DimProductSubcategory PSC ON\r\n        PSC.ProductSubcategoryAlternateKey = PS.ProductSubcategoryAlternateKey LEFT JOIN\r\n    dbo.DimProduct P ON\r\n        P.ProductAlternateKey = PS.ProductAlternateKey\r\nWHERE \r\n    P.ProductKey IS NULL",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ProductAlternateKey",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ProductAlternateKey",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ProductSubcategoryKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ProductSubcategoryKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "WeightUnitMeasureCode",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "WeightUnitMeasureCode",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "SizeUnitMeasureCode",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "SizeUnitMeasureCode",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "EnglishProductName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EnglishProductName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SpanishProductName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SpanishProductName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FrenchProductName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FrenchProductName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StandardCost",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "StandardCost",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "FinishedGoodsFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "FinishedGoodsFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Color",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Color",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SafetyStockLevel",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "SafetyStockLevel",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "ReorderPoint",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "ReorderPoint",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "ListPrice",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "ListPrice",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "Size",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Size",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SizeRange",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SizeRange",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Weight",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Weight",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "DaysToManufacture",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DaysToManufacture",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ProductLine",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "ProductLine",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "DealerPrice",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "DealerPrice",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "Class",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Class",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Style",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Style",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "ModelName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ModelName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LargePhoto",
											"type": "Byte[]",
											"physicalType": "varbinary"
										},
										"sink": {
											"name": "LargePhoto",
											"type": "Byte[]",
											"physicalType": "varbinary"
										}
									},
									{
										"source": {
											"name": "EnglishDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EnglishDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FrenchDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FrenchDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ChineseDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ChineseDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ArabicDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ArabicDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HebrewDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "HebrewDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ThaiDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ThaiDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GermanDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "GermanDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "JapaneseDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "JapaneseDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TurkishDescription",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "TurkishDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "StartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "EndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ProductStaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DimProduct",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "SubPipelines"
				},
				"annotations": [],
				"lastPublishTime": "2025-08-04T11:46:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AdventureWorksSource')]",
				"[concat(variables('factoryId'), '/datasets/ProductCategoryStaging')]",
				"[concat(variables('factoryId'), '/datasets/DimProductCategory')]",
				"[concat(variables('factoryId'), '/datasets/ProductSubcategoryStaging')]",
				"[concat(variables('factoryId'), '/datasets/DimProductSubCategory')]",
				"[concat(variables('factoryId'), '/datasets/ProductStaging')]",
				"[concat(variables('factoryId'), '/datasets/DimProduct')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PromotionRelatedTables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Promotion Data to Staging",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\n\t[PromotionAlternateKey] = SO.SpecialOfferID,\n\t[EnglishPromotionName] = SO.[Description],\n\t[SpanishPromotionName] = PNT.[SpanishName],\n\t[FrenchPromotionName] = PNT.[FrenchName],\n\t[DiscountPct] = SO.DiscountPct,\n\t[EnglishPromotionType] = SO.[Type],\n\t[SpanishPromotionType] = PT.[SpanishName],\n\t[FrenchPromotionType] = PT.[FrenchName],\n\t[EnglishPromotionCategory] = SO.Category,\n\t[SpanishPromotionCategory] = PCT.SpanishName,\n\t[FrenchPromotionCategory] = PCT.FrenchName,\n\t[StartDate] = SO.StartDate,\n\t[EndDate] = SO.EndDate,\n\t[MinQty] = SO.MinQty,\n\t[MaxQty] = SO.MaxQty\nFROM\n\tSales.SpecialOffer SO LEFT JOIN\n\tIntegration.PromotionNameType PNT ON\n\t\tPNT.Name = SO.Description LEFT JOIN\n\tIntegration.PromotionType PT ON\n\t\tPT.Name = SO.Type LEFT JOIN\n\tIntegration.PromotionCategoryType PCT ON\n\t\tPCT.Name = SO.Category\nORDER BY\n\tSO.SpecialOfferID",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "DELETE Integration.PromotionStaging",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PromotionAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PromotionAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EnglishPromotionName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EnglishPromotionName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SpanishPromotionName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SpanishPromotionName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FrenchPromotionName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FrenchPromotionName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DiscountPct",
											"type": "Decimal",
											"physicalType": "smallmoney",
											"scale": 4,
											"precision": 10
										},
										"sink": {
											"name": "DiscountPct",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "EnglishPromotionType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EnglishPromotionType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SpanishPromotionType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SpanishPromotionType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FrenchPromotionType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FrenchPromotionType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EnglishPromotionCategory",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EnglishPromotionCategory",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SpanishPromotionCategory",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SpanishPromotionCategory",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FrenchPromotionCategory",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FrenchPromotionCategory",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "StartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "EndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "MinQty",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "MinQty",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "MaxQty",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "MaxQty",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AdventureWorksSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "PromotionStaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Migrate Promotion Staging Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Promotion Data to Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\r\n    [PromotionAlternateKey] = PS.PromotionAlternateKey,\r\n    [EnglishPromotionName] = PS.EnglishPromotionName,\r\n    [SpanishPromotionName] = PS.SpanishPromotionName,\r\n    [FrenchPromotionName] = PS.FrenchPromotionName,\r\n    [DiscountPct] = PS.DiscountPct,\r\n    [EnglishPromotionType] = PS.EnglishPromotionType,\r\n    [SpanishPromotionType] = PS.SpanishPromotionType,\r\n    [FrenchPromotionType] = PS.FrenchPromotionType,\r\n    [EnglishPromotionCategory] = PS.EnglishPromotionCategory,\r\n    [SpanishPromotionCategory] = PS.SpanishPromotionCategory,\r\n    [FrenchPromotionCategory] = PS.FrenchPromotionCategory,\r\n    [StartDate] = PS.StartDate,\r\n    [EndDate] = PS.EndDate,\r\n    [MinQty] = PS.MinQty,\r\n    [MaxQty] = PS.MaxQty\r\nFROM\r\n    Integration.PromotionStaging PS LEFT JOIN\r\n    dbo.DimPromotion P ON\r\n        P.PromotionAlternateKey = PS.PromotionAlternateKey\r\nWHERE \r\n    P.PromotionKey IS NULL\r\nORDER BY\r\n    PS.PromotionAlternateKey",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PromotionAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PromotionAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EnglishPromotionName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EnglishPromotionName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SpanishPromotionName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SpanishPromotionName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FrenchPromotionName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FrenchPromotionName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DiscountPct",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "DiscountPct",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "EnglishPromotionType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EnglishPromotionType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SpanishPromotionType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SpanishPromotionType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FrenchPromotionType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FrenchPromotionType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EnglishPromotionCategory",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EnglishPromotionCategory",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SpanishPromotionCategory",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SpanishPromotionCategory",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "FrenchPromotionCategory",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FrenchPromotionCategory",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "StartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "EndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "MinQty",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "MinQty",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "MaxQty",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "MaxQty",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PromotionStaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DiimPromotion",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "SubPipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AdventureWorksSource')]",
				"[concat(variables('factoryId'), '/datasets/PromotionStaging')]",
				"[concat(variables('factoryId'), '/datasets/DiimPromotion')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ResellerSalesRelatedTables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Employee Data to Staging",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT  \r\n    [EmployeeNationalIDAlternateKey] = E.NationalIDNumber,\r\n    [ParentEmployeeNationalIDAlternateKey] = E2.NationalIDNumber,\r\n    [SalesTerritoryAlternateKey] = SP.TerritoryID,\r\n    [FirstName] = P.FirstName,\r\n    [LastName] = P.LastName,\r\n    [MiddleName] = P.MiddleName,\r\n    [NameStyle] = P.NameStyle,\r\n    [Title] = E.JobTitle,\r\n    [HireDate] = E.HireDate,\r\n    [BirthDate] = E.BirthDate,\r\n    [LoginID] = E.LoginID,\r\n    [EmailAddress] = EA.EmailAddress,\r\n    [Phone] = PP.PhoneNumber,\r\n    [MaritalStatus] = E.MaritalStatus,\r\n    [EmergencyContactName] = CAST(P.FirstName + ' ' + P.LastName AS NVARCHAR(50)),\r\n    [EmergencyContactPhone] = PP.PhoneNumber,\r\n    [SalariedFlag] = E.SalariedFlag,\r\n    [Gender] = E.Gender,\r\n    [PayFrequency] = EPH.PayFrequency,\r\n    [BaseRate] = EPH.Rate,\r\n    [VacationHours] = E.VacationHours,\r\n    [SickLeaveHours] = E.SickLeaveHours,\r\n    [CurrentFlag] = E.CurrentFlag,\r\n    [SalesPersonFlag] = \r\n        CAST(\r\n            CASE \r\n                WHEN SP.BusinessEntityID IS NULL THEN 0\r\n                ELSE 1\r\n            END\r\n        AS BIT),\r\n    [DepartmentName] = D.Name,\r\n    [StartDate] = EDH.StartDate,\r\n    [EndDate] = EDH.EndDate,\r\n    [Status] = CAST(\r\n        CASE\r\n            WHEN EDH.EndDate IS NULL THEN 'Current' \r\n            ELSE NULL\r\n        END AS NVARCHAR(50)\r\n    )\r\nFROM\r\n    HumanResources.Employee E left join\r\n    HumanResources.Employee E2 ON \r\n        E2.OrganizationNode = e.OrganizationNode.GetAncestor(1) OR\r\n        (\r\n            E.OrganizationNode.GetAncestor(1) = cast('/' AS hierarchyid) AND\r\n            E2.OrganizationNode IS NULL\r\n        ) LEFT JOIN\r\n    Person.Person P ON\r\n        P.BusinessEntityID = E.BusinessEntityID LEFT JOIN\r\n    Person.EmailAddress EA ON \r\n        EA.BusinessEntityID = P.BusinessEntityID \r\n    CROSS APPLY\r\n    (\r\n        SELECT TOP 1\r\n            PP.PhoneNumber\r\n        FROM\r\n            Person.PersonPhone PP \r\n        WHERE\r\n            PP.BusinessEntityID = P.BusinessEntityID \r\n        ORDER BY\r\n            PP.PhoneNumberTypeID\r\n    ) PP LEFT JOIN\r\n    Sales.SalesPerson SP ON \r\n        SP.BusinessEntityID = P.BusinessEntityID LEFT JOIN\r\n    HumanResources.EmployeeDepartmentHistory EDH ON\r\n        EDH.BusinessEntityID = E.BusinessEntityID LEFT JOIN\r\n    HumanResources.Department D ON\r\n        D.DepartmentID = EDH.DepartmentID \r\n    CROSS APPLY\r\n    (\r\n        SELECT TOP 1\r\n            *\r\n        FROM\r\n            HumanResources.EmployeePayHistory EPH\r\n        WHERE\r\n            EPH.BusinessEntityID = E.BusinessEntityID\r\n        ORDER BY\r\n            EPH.RateChangeDate DESC\r\n    ) EPH\r\nORDER BY \r\n    E.HireDate",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "DELETE Integration.EmployeeStaging",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EmployeeNationalIDAlternateKey",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EmployeeNationalIDAlternateKey",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ParentEmployeeNationalIDAlternateKey",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ParentEmployeeNationalIDAlternateKey",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SalesTerritoryAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SalesTerritoryAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LastName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LastName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MiddleName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MiddleName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NameStyle",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "NameStyle",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Title",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Title",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HireDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "HireDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "BirthDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "BirthDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "LoginID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LoginID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Phone",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Phone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MaritalStatus",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "MaritalStatus",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "EmergencyContactName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EmergencyContactName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EmergencyContactPhone",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EmergencyContactPhone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SalariedFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "SalariedFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Gender",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "PayFrequency",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "PayFrequency",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "BaseRate",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "BaseRate",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "VacationHours",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "VacationHours",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "SickLeaveHours",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "SickLeaveHours",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "CurrentFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "CurrentFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "SalesPersonFlag",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SalesPersonFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "DepartmentName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DepartmentName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StartDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "StartDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "EndDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "EndDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AdventureWorksSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "EmployeeStaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Migrate Employee Staging Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Employee Data to Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\n\t[EmployeeNationalIDAlternateKey] = ES.EmployeeNationalIDAlternateKey,\n\t[ParentEmployeeNationalIDAlternateKey] = ES.ParentEmployeeNationalIDAlternateKey,\n\t[SalesTerritoryKey] = ST.SalesTerritoryKey,\n\tFirstName = ES.FirstName,\n\t[LastName] = ES.LastName,\n\t[MiddleName] = ES.MiddleName,\n\t[NameStyle] = ES.NameStyle,\n\t[Title] = ES.Title,\n\t[HireDate] = ES.HireDate,\n\t[BirthDate] = ES.BirthDate,\n\t[LoginID] = ES.LoginID,\n\t[EmailAddress] = ES.EmailAddress,\n\t[Phone] = ES.Phone,\n\t[MaritalStatus] = ES.MaritalStatus,\n\t[EmergencyContactName] = ES.EmergencyContactName,\n\t[EmergencyContactPhone] = ES.EmergencyContactPhone,\n\t[SalariedFlag] = ES.SalariedFlag,\n\t[Gender] = ES.Gender,\n\t[PayFrequency] = ES.PayFrequency,\n\t[BaseRate] = ES.BaseRate,\n\t[VacationHours] = ES.VacationHours,\n\t[SickLeaveHours] = ES.SickLeaveHours,\n\t[CurrentFlag] = ES.CurrentFlag,\n\t[SalesPersonFlag] = ES.SalesPersonFlag,\n\t[DepartmentName] = ES.DepartmentName,\n\t[StartDate] = ES.StartDate,\n\t[EndDate] = ES.EndDate,\n\t[Status] = ES.Status\nFROM\n\tIntegration.EmployeeStaging ES LEFT JOIN\n\tdbo.DimSalesTerritory ST ON\n\t\tST.SalesTerritoryAlternateKey = ISNULL(ES.SalesTerritoryAlternateKey, 0) LEFT JOIN\n\tdbo.DimEmployee E ON\n\t\tE.EmployeeNationalIDAlternateKey = ES.EmployeeNationalIDAlternateKey\nWHERE \n\tE.EmployeeKey IS NULL\nORDER BY \n\tES.HireDate",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EmployeeNationalIDAlternateKey",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EmployeeNationalIDAlternateKey",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ParentEmployeeNationalIDAlternateKey",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ParentEmployeeNationalIDAlternateKey",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SalesTerritoryKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SalesTerritoryKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LastName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LastName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MiddleName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MiddleName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NameStyle",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "NameStyle",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Title",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Title",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HireDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "HireDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "BirthDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "BirthDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "LoginID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LoginID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Phone",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Phone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MaritalStatus",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "MaritalStatus",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "EmergencyContactName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EmergencyContactName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EmergencyContactPhone",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EmergencyContactPhone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SalariedFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "SalariedFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Gender",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "PayFrequency",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "PayFrequency",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "BaseRate",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "BaseRate",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "VacationHours",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "VacationHours",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "SickLeaveHours",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "SickLeaveHours",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "CurrentFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "CurrentFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "SalesPersonFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "SalesPersonFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "DepartmentName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DepartmentName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StartDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "StartDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "EndDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "EndDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "EmployeeStaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DimEmployee",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Update ParentEmployeeKey in DimEmployee",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Migrate Employee Staging Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AdventureWorksDW2022",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "UPDATE \n\tE\nSET\n\tE.ParentEmployeeKey = E2.EmployeeKey\nFROM\n\tdbo.DimEmployee E LEFT JOIN \n\tdbo.DimEmployee E2 ON\n\t\tE2.ParentEmployeeNationalIDAlternateKey = E.EmployeeNationalIDAlternateKey"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Copy Reseller Data to Staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Update ParentEmployeeKey in DimEmployee",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\n\t[GeographyCity] = AD.City,\n\t[GeographyPostalCode] = AD.PostalCode,\n\t[GeographyStateProvinceCode] = CAST(SP.StateProvinceCode AS NVARCHAR(3)),\n\t[GeographyCountryRegionCode] = SP.CountryRegionCode,\n\t[ResellerAlternateKey] = CAST(C.AccountNumber AS NVARCHAR(15)),\n\t[Phone] = PP.PhoneNumber,\n\t[BusinessType] = CAST(SBT.[Name] AS VARCHAR(20)),\n\t[ResellerName] = S.[Name],\n\t[NumberEmployees] = S.NumberEmployees,\n\t[OrderFrequency] = NULL,\n\t[OrderMonth] = NULL,\n\t[FirstOrderYear] = COALESCE(\n\t\tMIN(YEAR(SO.orderdate)), \n\t\tMIN(YEAR(SO2.orderdate))\n\t),\n\t[LastOrderYear] = COALESCE(\n\t\tMAX(YEAR(SO.orderdate)), MAX(YEAR(SO2.orderdate))\n\t),\n\t[ProductLine] = S.Specialty,\n\t[AddressLine1] = AD.AddressLine1,\n\t[AddressLine2] = AD.AddressLine2,\n\t[AnnualSales] = S.AnnualSales,\n\t[BankName] = S.BankName,\n\t[MinPaymentType] = NULL,\n\t[MinPaymentAmount] = NULL,\n\t[AnnualRevenue] = S.AnnualRevenue,\n\t[YearOpened] = S.YearOpened\nFROM \n\tSales.Customer C LEFT JOIN \n\tSales.Customer C2 on\n\t\tC2.StoreID = C.StoreID LEFT JOIN\n\tSales.vStoreWithDemographics S ON\n\t\tS.BusinessEntityID = C.StoreID LEFT JOIN\n\tSales.SalesOrderHeader SO ON\n\t\tSO.CustomerID = C.CustomerID LEFT JOIN\n\tSales.SalesOrderHeader SO2 ON\n\t\tSO2.CustomerID = C2.CustomerID LEFT JOIN\n\tIntegration.StoreBusinessType SBT ON\n\t\tSBT.Code = S.BusinessType\n\tCROSS APPLY\n\t(\n\t\tSELECT TOP 1\n\t\t\tBEC.PersonID,\n\t\t\tBEC.ContactTypeID\n\t\tFROM\t\n\t\t\tPerson.BusinessEntityContact BEC LEFT JOIN\n\t\t\tPerson.ContactType CT ON\n\t\t\t\tCT.ContactTypeID = BEC.ContactTypeID\n\t\tWHERE\n\t\t\tBEC.BusinessEntityID = S.BusinessEntityID \n\t\tORDER BY\n\t\t\tCASE\n\t\t\t\tWHEN CT.Name = 'Owner' THEN 1\n\t\t\t\tWHEN CHARINDEX('Manager', CT.Name) > 0 THEN 2\n\t\t\t\tELSE 3\n\t\t\tEND\n\t) CT \n\tCROSS APPLY\n\t(\n\t\tSELECT TOP 1\n\t\t\tPP.PhoneNumber\n\t\tFROM\n\t\t\tPerson.PersonPhone PP \n\t\tWHERE\n\t\t\tPP.BusinessEntityID = CT.PersonID\n\t\tORDER BY\n\t\t\tCASE \n\t\t\t\tWHEN PP.PhoneNumberTypeID = 3 THEN 1\n\t\t\t\tWHEN PP.PhoneNumberTypeID = 1 THEN 2\n\t\t\t\tELSE 3\n\t\t\tEND\n\t) PP \n\tCROSS APPLY\n\t(\n\t\tSELECT TOP 1\n\t\t\tBEA.AddressID\n\t\tFROM\n\t\t\tPerson.BusinessEntityAddress BEA LEFT JOIN\n\t\t\tPerson.AddressType A ON\n\t\t\t\tA.AddressTypeID = BEA.AddressTypeID\n\t\tWHERE\n\t\t\tBEA.BusinessEntityID = S.BusinessEntityID\n\t\tORDER BY\n\t\t\tCASE\n\t\t\t\tWHEN A.[Name] = 'Main Office' THEN 1\n\t\t\t\tWHEN A.[Name] = 'Primary' THEN 2\n\t\t\t\tWHEN A.[Name] = 'Billing' THEN 3\n\t\t\t\tWHEN A.[Name] = 'Shipping' THEN 4\n\t\t\t\tELSE 5\n\t\t\tEND\n\t) A LEFT JOIN\n\tPerson.Address AD ON\n\t\tAD.AddressID = A.AddressID LEFT JOIN\n\tPerson.StateProvince SP ON\n\t\tSP.StateProvinceID = AD.StateProvinceID\nWHERE \n\tC.StoreID IS NOT NULL AND\n\tC.PersonID IS NULL\nGROUP BY\n\tC.StoreID,\n\tC.AccountNumber,\n\tC.CustomerID,\n\tSBT.[Name],\n\tS.[Name],\n\tS.NumberEmployees,\n\tPP.PhoneNumber,\n\tAD.AddressLine1,\n\tAD.AddressLine2,\n\tS.Specialty,\n\tS.AnnualSales,\n\tS.BankName,\n\tS.AnnualRevenue,\n\tS.YearOpened,\t\n\tAD.City,\n\tAD.PostalCode,\n\tSP.StateProvinceCode,\n\tSP.CountryRegionCode,\n\tC.AccountNumber\nORDER BY\n\tC.AccountNumber",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "DELETE Integration.ResellerStaging",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GeographyCity",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "GeographyCity",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GeographyPostalCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "GeographyPostalCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GeographyStateProvinceCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "GeographyStateProvinceCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GeographyCountryRegionCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "GeographyCountryRegionCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ResellerAlternateKey",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ResellerAlternateKey",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Phone",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Phone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BusinessType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BusinessType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ResellerName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ResellerName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NumberEmployees",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "NumberEmployees",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "OrderFrequency",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "OrderFrequency",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "OrderMonth",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "OrderMonth",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "FirstOrderYear",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "FirstOrderYear",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LastOrderYear",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LastOrderYear",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ProductLine",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ProductLine",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AddressLine1",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AddressLine1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AddressLine2",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AddressLine2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AnnualSales",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "AnnualSales",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "BankName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BankName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MinPaymentType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "MinPaymentType",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "MinPaymentAmount",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "MinPaymentAmount",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "AnnualRevenue",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "AnnualRevenue",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "YearOpened",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "YearOpened",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AdventureWorksSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ResellerStaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "MIgrate Reseller Staging Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Reseller Data to Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\n\t[GeographyKey] = G.GeographyKey,\n\t[ResellerAlternateKey] = RS.ResellerAlternateKey,\n\t[Phone] = RS.Phone,\n\t[BusinessType] = RS.BusinessType,\n\t[ResellerName] = RS.ResellerName,\n\t[NumberEmployees] = RS.NumberEmployees,\n\t[OrderFrequency] = RS.OrderFrequency,\n\t[OrderMonth] = RS.OrderMonth,\n\t[FirstOrderYear] = RS.FirstOrderYear,\n\t[LastOrderYear] = RS.LastOrderYear,\n\t[ProductLine] = RS.ProductLine,\n\t[AddressLine1] = RS.AddressLine1,\n\t[AddressLine2] = RS.AddressLine2,\n\t[AnnualSales] = RS.AnnualSales,\n\t[BankName] = RS.BankName,\n\t[MinPaymentType] = RS.MinPaymentType,\n\t[MinPaymentAmount] = RS.MinPaymentAmount,\n\t[AnnualRevenue] = RS.AnnualRevenue,\n\t[YearOpened] = RS.YearOpened\nFROM\n\tIntegration.ResellerStaging RS LEFT JOIN\n\tdbo.DimGeography G ON\n\t\tG.City = RS.GeographyCity AND\n\t\tG.PostalCode = RS.GeographyPostalCode AND\n\t\tG.StateProvinceCode = RS.GeographyStateProvinceCode AND\n\t\tG.CountryRegionCode = RS.GeographyCountryRegionCode LEFT JOIN\n\tdbo.DimReseller R ON\n\t\tR.ResellerAlternateKey = RS.ResellerAlternateKey\nWHERE \n\tR.ResellerKey IS NULL\nORDER BY \n\tRS.ResellerAlternateKey",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GeographyKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GeographyKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ResellerAlternateKey",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ResellerAlternateKey",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Phone",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Phone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BusinessType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BusinessType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ResellerName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ResellerName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NumberEmployees",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "NumberEmployees",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "OrderFrequency",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "OrderFrequency",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "OrderMonth",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "OrderMonth",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "FirstOrderYear",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "FirstOrderYear",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LastOrderYear",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LastOrderYear",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ProductLine",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ProductLine",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AddressLine1",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AddressLine1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AddressLine2",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AddressLine2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AnnualSales",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "AnnualSales",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "BankName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BankName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MinPaymentType",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "MinPaymentType",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "MinPaymentAmount",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "MinPaymentAmount",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "AnnualRevenue",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "AnnualRevenue",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "YearOpened",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "YearOpened",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ResellerStaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DimReseller",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Reseller Sales Data to Staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "MIgrate Reseller Staging Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \r\n    [ProductAlternateKey] = P.ProductNumber,\r\n    [OrderDateKey] = (\r\n        (YEAR(SOH.OrderDate) * 10000) +\r\n        (MONTH(SOH.OrderDate) * 100) + \r\n        DAY(SOH.OrderDate)\r\n    ),\r\n    [DueDateKey] = (\r\n        (YEAR(SOH.DueDate) * 10000) +\r\n        (MONTH(SOH.DueDate) * 100) + \r\n        DAY(SOH.DueDate)\r\n    ),\r\n    [ShipDateKey] = (\r\n        (YEAR(SOH.ShipDate) * 10000) +\r\n        (MONTH(SOH.ShipDate) * 100) + \r\n        DAY(SOH.ShipDate)\r\n    ),\r\n    [ResellerAlternateKey] = CAST(C2.AccountNumber AS NVARCHAR(50)),\r\n    [EmployeeNationalIDAlternateKey] = E.NationalIDNumber,\r\n    [PromotionAlternateKey] = SOD.SpecialOfferID,\r\n    [CurrencyAlternateKey] = ISNULL(CR.ToCurrencyCode, 'USD'),\r\n    [SalesTerritoryAlternateKey] = SOH.TerritoryID,\r\n    [SalesOrderNumber] = CAST(SOH.SalesOrderNumber AS NVARCHAR(20)),\r\n    [SalesOrderLineNumber] = (\r\n        ROW_NUMBER() OVER(\r\n            PARTITION BY \r\n                SOD.SalesOrderID \r\n            ORDER BY \r\n                SOD.SalesOrderDetailID ASC\r\n        ) \r\n    ),\r\n    [RevisionNumber] = SOH.RevisionNumber,\r\n    [OrderQuantity] = SOD.OrderQty,\r\n    [UnitPrice] = SOD.UnitPrice,\r\n    [ExtendedAmount] = SOD.UnitPrice * SOD.OrderQty,\r\n    [UnitPriceDiscountPct] = SOD.UnitPriceDiscount,\r\n    [DiscountAmount] = (\r\n        SOD.UnitPrice * \r\n        SOD.OrderQty *\r\n        SOD.UnitPriceDiscount\r\n    ),\r\n    [ProductStandardCost] = COALESCE(PCH.StandardCost, P.StandardCost),\r\n    [TotalProductCost] = (\r\n        COALESCE(PCH.StandardCost, P.StandardCost) *\r\n        SOD.OrderQty\r\n    ),\r\n    [SalesAmount] = SOD.LineTotal,\r\n    [TaxAmt] = ROUND(\r\n        (\r\n            (SOD.LineTotal / SOH.SubTotal) * \r\n            SOH.TaxAmt\r\n        ),\r\n        4\r\n    ),\r\n    [Freight] = ROUND(\r\n        (\r\n            (SOD.LineTotal / SOH.SubTotal) * \r\n            SOH.Freight\r\n        ),\r\n        4\r\n    ),\r\n    [CarrierTrackingNumber] = SOD.CarrierTrackingNumber,\r\n    [CustomerPONumber] = SOH.PurchaseOrderNumber,\r\n    [OrderDate] = SOH.OrderDate,\r\n    [DueDate] = SOH.DueDate,\r\n    [ShipDate] = SOH.ShipDate\r\nFROM\r\n    Sales.SalesOrderHeader SOH LEFT JOIN\r\n    Sales.SalesOrderDetail SOD ON\r\n        SOD.SalesOrderID = SOH.SalesOrderID LEFT JOIN\r\n    Sales.Customer C ON \r\n        C.CustomerID = SOH.CustomerID LEFT JOIN\r\n    Sales.Customer C2 ON\r\n        C2.StoreID = C.StoreID AND\r\n        C2.PersonID IS NULL LEFT JOIN\r\n    Production.[Product] P ON\r\n        P.ProductID = SOD.ProductID LEFT JOIN\r\n    Production.ProductCostHistory PCH ON \r\n        PCH.ProductID = SOD.ProductID \r\n        AND\r\n        SOH.OrderDate >= PCH.StartDate AND \r\n        (\r\n            SOH.OrderDate <= PCH.EndDate OR \r\n            PCH.EndDate IS NULL\r\n        ) \r\n        LEFT JOIN\r\n    Sales.CurrencyRate CR ON\r\n        CR.CurrencyRateID = SOH.CurrencyRateID LEFT JOIN\r\n    Sales.SalesPerson SP ON\r\n        SP.BusinessEntityID = SOH.SalesPersonID LEFT JOIN\r\n    HumanResources.Employee E ON\r\n        E.BusinessEntityID = SP.BusinessEntityID\r\nWHERE\r\n    C.StoreID IS NOT NULL AND\r\n    SOH.SalesOrderID IS NOT NULL\r\nORDER BY\r\n    SOH.SalesOrderID,\r\n    SOD.SalesOrderDetailID",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "DELETE Integration.FactResellerSalesStaging",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ProductAlternateKey",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ProductAlternateKey",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OrderDateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "OrderDateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DueDateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DueDateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ShipDateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ShipDateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ResellerAlternateKey",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ResellerAlternateKey",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EmployeeNationalIDAlternateKey",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EmployeeNationalIDAlternateKey",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PromotionAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PromotionAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CurrencyAlternateKey",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "CurrencyAlternateKey",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SalesTerritoryAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SalesTerritoryAlternateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SalesOrderNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SalesOrderNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SalesOrderLineNumber",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "SalesOrderLineNumber",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "RevisionNumber",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "RevisionNumber",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "OrderQuantity",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "OrderQuantity",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "UnitPrice",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "ExtendedAmount",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "ExtendedAmount",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "UnitPriceDiscountPct",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "UnitPriceDiscountPct",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "DiscountAmount",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "DiscountAmount",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "ProductStandardCost",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "ProductStandardCost",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "TotalProductCost",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "TotalProductCost",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "SalesAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										},
										"sink": {
											"name": "SalesAmount",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "TaxAmt",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										},
										"sink": {
											"name": "TaxAmt",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "Freight",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										},
										"sink": {
											"name": "Freight",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "CarrierTrackingNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CarrierTrackingNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CustomerPONumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CustomerPONumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OrderDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "OrderDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DueDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DueDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ShipDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ShipDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AdventureWorksSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "FactResellerSalesStaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Migrate Reseller Sales Staging Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Reseller Sales Data to Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\r\n    [ProductKey] = P.ProductKey,\r\n    [OrderDateKey] = FRSS.OrderDateKey,\r\n    [DueDateKey] = FRSS.DueDateKey,\r\n    [ShipDateKey] = FRSS.ShipDateKey,\r\n    [ResellerKey] = R.ResellerKey,\r\n    [EmployeeKey] = E.EmployeeKey,\r\n    [PromotionKey] = PR.PromotionKey,\r\n    [CurrencyKey] = C.CurrencyKey,\r\n    [SalesTerritoryKey] = ST.SalesTerritoryKey,\r\n    [SalesOrderNumber] = FRSS.SalesOrderNumber,\r\n    [SalesOrderLineNumber] = FRSS.SalesOrderLineNumber,\r\n    [RevisionNumber] = FRSS.RevisionNumber,\r\n    [OrderQuantity] = FRSS.OrderQuantity,\r\n    [UnitPrice] = FRSS.UnitPrice,\r\n    [ExtendedAmount] = FRSS.ExtendedAmount,\r\n    [UnitPriceDiscountPct] = FRSS.UnitPriceDiscountPct,\r\n    [DiscountAmount] = FRSS.DiscountAmount,\r\n    [ProductStandardCost] = FRSS.ProductStandardCost,\r\n    [TotalProductCost] = FRSS.TotalProductCost,\r\n    [SalesAmount] = FRSS.SalesAmount,\r\n    [TaxAmt] = FRSS.TaxAmt,\r\n    [Freight] = FRSS.Freight,\r\n    [CarrierTrackingNumber] = FRSS.CarrierTrackingNumber,\r\n    [CustomerPONumber] = FRSS.CustomerPONumber,\r\n    [OrderDate] = FRSS.OrderDate,\r\n    [DueDate] = FRSS.DueDate,\r\n    [ShipDate] = FRSS.ShipDate\r\nFROM\r\n    Integration.FactResellerSalesStaging FRSS \r\n    CROSS APPLY\r\n    (\r\n        SELECT TOP 1\r\n            P.ProductKey\r\n        FROM\t\r\n            dbo.DimProduct P \r\n        WHERE\r\n            P.ProductAlternateKey = FRSS.ProductAlternateKey \r\n        ORDER BY\r\n            P.Status DESC,\r\n            P.StartDate DESC\r\n    ) P LEFT JOIN\r\n    dbo.DimReseller R ON\r\n        R.ResellerAlternateKey = FRSS.ResellerAlternateKey\r\n    CROSS APPLY\r\n    (\r\n        SELECT TOP 1\r\n            E.EmployeeKey\r\n        FROM\r\n            dbo.DimEmployee E\r\n        WHERE\r\n            E.EmployeeNationalIDAlternateKey = FRSS.EmployeeNationalIDAlternateKey\r\n        ORDER BY\r\n            E.Status DESC,\r\n            E.StartDate DESC\r\n    ) E LEFT JOIN\r\n    dbo.DimPromotion PR ON\r\n        PR.PromotionAlternateKey = FRSS.PromotionAlternateKey LEFT JOIN\r\n    dbo.DimCurrency C ON\r\n        C.CurrencyAlternateKey = FRSS.CurrencyAlternateKey LEFT JOIN\r\n    dbo.DimSalesTerritory ST ON\r\n        ST.SalesTerritoryAlternateKey = FRSS.SalesTerritoryAlternateKey LEFT JOIN\r\n    dbo.FactResellerSales FRS ON\r\n        FRS.SalesOrderNumber = FRSS.SalesOrderNumber AND\r\n        FRS.SalesOrderLineNumber = FRSS.SalesOrderLineNumber\r\nWHERE \r\n    FRS.SalesOrderNumber IS NULL\r\nORDER BY \r\n    FRSS.SalesOrderNumber,\r\n    FRSS.SalesOrderLineNumber",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ProductKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ProductKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "OrderDateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "OrderDateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DueDateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DueDateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ShipDateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ShipDateKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ResellerKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ResellerKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "EmployeeKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PromotionKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PromotionKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CurrencyKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CurrencyKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SalesTerritoryKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SalesTerritoryKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SalesOrderNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SalesOrderNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SalesOrderLineNumber",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "SalesOrderLineNumber",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "RevisionNumber",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "RevisionNumber",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "OrderQuantity",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "OrderQuantity",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "UnitPrice",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "ExtendedAmount",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "ExtendedAmount",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "UnitPriceDiscountPct",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "UnitPriceDiscountPct",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "DiscountAmount",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "DiscountAmount",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "ProductStandardCost",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "ProductStandardCost",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "TotalProductCost",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "TotalProductCost",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "SalesAmount",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "SalesAmount",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "TaxAmt",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "TaxAmt",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "Freight",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "Freight",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "CarrierTrackingNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CarrierTrackingNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CustomerPONumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CustomerPONumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OrderDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "OrderDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DueDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DueDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ShipDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ShipDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FactResellerSalesStaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "FactResellerSales",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "SubPipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AdventureWorksSource')]",
				"[concat(variables('factoryId'), '/datasets/EmployeeStaging')]",
				"[concat(variables('factoryId'), '/datasets/DimEmployee')]",
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorksDW2022')]",
				"[concat(variables('factoryId'), '/datasets/ResellerStaging')]",
				"[concat(variables('factoryId'), '/datasets/DimReseller')]",
				"[concat(variables('factoryId'), '/datasets/FactResellerSalesStaging')]",
				"[concat(variables('factoryId'), '/datasets/FactResellerSales')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AdventureWorksSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorks2022",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorks2022')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CurrencyStaging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorksDW2022",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CurrencyAlternateKey",
						"type": "nvarchar"
					},
					{
						"name": "CurrencyName",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "Integration",
					"table": "CurrencyStaging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorksDW2022')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustomerStaging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorksDW2022",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerAlternateKey",
						"type": "nvarchar"
					},
					{
						"name": "GeographyCity",
						"type": "nvarchar"
					},
					{
						"name": "GeographyPostalCode",
						"type": "nvarchar"
					},
					{
						"name": "GeographyStateProvinceCode",
						"type": "nvarchar"
					},
					{
						"name": "GeographyCountryRegionCode",
						"type": "nvarchar"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "NameStyle",
						"type": "bit"
					},
					{
						"name": "BirthDate",
						"type": "date"
					},
					{
						"name": "MaritalStatus",
						"type": "nchar"
					},
					{
						"name": "Suffix",
						"type": "nvarchar"
					},
					{
						"name": "Gender",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "YearlyIncome",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TotalChildren",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "NumberChildrenAtHome",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "EnglishEducation",
						"type": "nvarchar"
					},
					{
						"name": "SpanishEducation",
						"type": "nvarchar"
					},
					{
						"name": "FrenchEducation",
						"type": "nvarchar"
					},
					{
						"name": "EnglishOccupation",
						"type": "nvarchar"
					},
					{
						"name": "SpanishOccupation",
						"type": "nvarchar"
					},
					{
						"name": "FrenchOccupation",
						"type": "nvarchar"
					},
					{
						"name": "HouseOwnerFlag",
						"type": "nchar"
					},
					{
						"name": "NumberCarsOwned",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "AddressLine1",
						"type": "nvarchar"
					},
					{
						"name": "AddressLine2",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					},
					{
						"name": "DateFirstPurchase",
						"type": "date"
					},
					{
						"name": "CommuteDistance",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "Integration",
					"table": "CustomerStaging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorksDW2022')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DiimPromotion')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorksDW2022",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PromotionKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PromotionAlternateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EnglishPromotionName",
						"type": "nvarchar"
					},
					{
						"name": "SpanishPromotionName",
						"type": "nvarchar"
					},
					{
						"name": "FrenchPromotionName",
						"type": "nvarchar"
					},
					{
						"name": "DiscountPct",
						"type": "float",
						"precision": 15
					},
					{
						"name": "EnglishPromotionType",
						"type": "nvarchar"
					},
					{
						"name": "SpanishPromotionType",
						"type": "nvarchar"
					},
					{
						"name": "FrenchPromotionType",
						"type": "nvarchar"
					},
					{
						"name": "EnglishPromotionCategory",
						"type": "nvarchar"
					},
					{
						"name": "SpanishPromotionCategory",
						"type": "nvarchar"
					},
					{
						"name": "FrenchPromotionCategory",
						"type": "nvarchar"
					},
					{
						"name": "StartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "EndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "MinQty",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MaxQty",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimPromotion"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorksDW2022')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimCurrency')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorksDW2022",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CurrencyKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CurrencyAlternateKey",
						"type": "nchar"
					},
					{
						"name": "CurrencyName",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimCurrency"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorksDW2022')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimCustomer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorksDW2022",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "GeographyKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerAlternateKey",
						"type": "nvarchar"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "NameStyle",
						"type": "bit"
					},
					{
						"name": "BirthDate",
						"type": "date"
					},
					{
						"name": "MaritalStatus",
						"type": "nchar"
					},
					{
						"name": "Suffix",
						"type": "nvarchar"
					},
					{
						"name": "Gender",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "YearlyIncome",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TotalChildren",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "NumberChildrenAtHome",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "EnglishEducation",
						"type": "nvarchar"
					},
					{
						"name": "SpanishEducation",
						"type": "nvarchar"
					},
					{
						"name": "FrenchEducation",
						"type": "nvarchar"
					},
					{
						"name": "EnglishOccupation",
						"type": "nvarchar"
					},
					{
						"name": "SpanishOccupation",
						"type": "nvarchar"
					},
					{
						"name": "FrenchOccupation",
						"type": "nvarchar"
					},
					{
						"name": "HouseOwnerFlag",
						"type": "nchar"
					},
					{
						"name": "NumberCarsOwned",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "AddressLine1",
						"type": "nvarchar"
					},
					{
						"name": "AddressLine2",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					},
					{
						"name": "DateFirstPurchase",
						"type": "date"
					},
					{
						"name": "CommuteDistance",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimCustomer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorksDW2022')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimEmployee')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorksDW2022",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EmployeeKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ParentEmployeeKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmployeeNationalIDAlternateKey",
						"type": "nvarchar"
					},
					{
						"name": "ParentEmployeeNationalIDAlternateKey",
						"type": "nvarchar"
					},
					{
						"name": "SalesTerritoryKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "NameStyle",
						"type": "bit"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "HireDate",
						"type": "date"
					},
					{
						"name": "BirthDate",
						"type": "date"
					},
					{
						"name": "LoginID",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					},
					{
						"name": "MaritalStatus",
						"type": "nchar"
					},
					{
						"name": "EmergencyContactName",
						"type": "nvarchar"
					},
					{
						"name": "EmergencyContactPhone",
						"type": "nvarchar"
					},
					{
						"name": "SalariedFlag",
						"type": "bit"
					},
					{
						"name": "Gender",
						"type": "nchar"
					},
					{
						"name": "PayFrequency",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "BaseRate",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "VacationHours",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "SickLeaveHours",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "CurrentFlag",
						"type": "bit"
					},
					{
						"name": "SalesPersonFlag",
						"type": "bit"
					},
					{
						"name": "DepartmentName",
						"type": "nvarchar"
					},
					{
						"name": "StartDate",
						"type": "date"
					},
					{
						"name": "EndDate",
						"type": "date"
					},
					{
						"name": "Status",
						"type": "nvarchar"
					},
					{
						"name": "EmployeePhoto",
						"type": "varbinary"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimEmployee"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorksDW2022')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimGeography')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorksDW2022",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GeographyKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "City",
						"type": "nvarchar"
					},
					{
						"name": "StateProvinceCode",
						"type": "nvarchar"
					},
					{
						"name": "StateProvinceName",
						"type": "nvarchar"
					},
					{
						"name": "CountryRegionCode",
						"type": "nvarchar"
					},
					{
						"name": "EnglishCountryRegionName",
						"type": "nvarchar"
					},
					{
						"name": "SpanishCountryRegionName",
						"type": "nvarchar"
					},
					{
						"name": "FrenchCountryRegionName",
						"type": "nvarchar"
					},
					{
						"name": "PostalCode",
						"type": "nvarchar"
					},
					{
						"name": "SalesTerritoryKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IpAddressLocator",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimGeography"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorksDW2022')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimProduct')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorksDW2022",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductAlternateKey",
						"type": "nvarchar"
					},
					{
						"name": "ProductSubcategoryKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WeightUnitMeasureCode",
						"type": "nchar"
					},
					{
						"name": "SizeUnitMeasureCode",
						"type": "nchar"
					},
					{
						"name": "EnglishProductName",
						"type": "nvarchar"
					},
					{
						"name": "SpanishProductName",
						"type": "nvarchar"
					},
					{
						"name": "FrenchProductName",
						"type": "nvarchar"
					},
					{
						"name": "StandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "FinishedGoodsFlag",
						"type": "bit"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "SafetyStockLevel",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "ReorderPoint",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "ListPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "SizeRange",
						"type": "nvarchar"
					},
					{
						"name": "Weight",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DaysToManufacture",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductLine",
						"type": "nchar"
					},
					{
						"name": "DealerPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Class",
						"type": "nchar"
					},
					{
						"name": "Style",
						"type": "nchar"
					},
					{
						"name": "ModelName",
						"type": "nvarchar"
					},
					{
						"name": "LargePhoto",
						"type": "varbinary"
					},
					{
						"name": "EnglishDescription",
						"type": "nvarchar"
					},
					{
						"name": "FrenchDescription",
						"type": "nvarchar"
					},
					{
						"name": "ChineseDescription",
						"type": "nvarchar"
					},
					{
						"name": "ArabicDescription",
						"type": "nvarchar"
					},
					{
						"name": "HebrewDescription",
						"type": "nvarchar"
					},
					{
						"name": "ThaiDescription",
						"type": "nvarchar"
					},
					{
						"name": "GermanDescription",
						"type": "nvarchar"
					},
					{
						"name": "JapaneseDescription",
						"type": "nvarchar"
					},
					{
						"name": "TurkishDescription",
						"type": "nvarchar"
					},
					{
						"name": "StartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "EndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Status",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimProduct"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorksDW2022')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimProductCategory')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorksDW2022",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductAlternateKey",
						"type": "nvarchar"
					},
					{
						"name": "ProductSubcategoryKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WeightUnitMeasureCode",
						"type": "nchar"
					},
					{
						"name": "SizeUnitMeasureCode",
						"type": "nchar"
					},
					{
						"name": "EnglishProductName",
						"type": "nvarchar"
					},
					{
						"name": "SpanishProductName",
						"type": "nvarchar"
					},
					{
						"name": "FrenchProductName",
						"type": "nvarchar"
					},
					{
						"name": "StandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "FinishedGoodsFlag",
						"type": "bit"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "SafetyStockLevel",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "ReorderPoint",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "ListPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "SizeRange",
						"type": "nvarchar"
					},
					{
						"name": "Weight",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DaysToManufacture",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductLine",
						"type": "nchar"
					},
					{
						"name": "DealerPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Class",
						"type": "nchar"
					},
					{
						"name": "Style",
						"type": "nchar"
					},
					{
						"name": "ModelName",
						"type": "nvarchar"
					},
					{
						"name": "LargePhoto",
						"type": "varbinary"
					},
					{
						"name": "EnglishDescription",
						"type": "nvarchar"
					},
					{
						"name": "FrenchDescription",
						"type": "nvarchar"
					},
					{
						"name": "ChineseDescription",
						"type": "nvarchar"
					},
					{
						"name": "ArabicDescription",
						"type": "nvarchar"
					},
					{
						"name": "HebrewDescription",
						"type": "nvarchar"
					},
					{
						"name": "ThaiDescription",
						"type": "nvarchar"
					},
					{
						"name": "GermanDescription",
						"type": "nvarchar"
					},
					{
						"name": "JapaneseDescription",
						"type": "nvarchar"
					},
					{
						"name": "TurkishDescription",
						"type": "nvarchar"
					},
					{
						"name": "StartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "EndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Status",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimProductCategory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorksDW2022')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimProductSubCategory')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorksDW2022",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductSubcategoryAlternateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EnglishProductSubcategoryName",
						"type": "nvarchar"
					},
					{
						"name": "SpanishProductSubcategoryName",
						"type": "nvarchar"
					},
					{
						"name": "FrenchProductSubcategoryName",
						"type": "nvarchar"
					},
					{
						"name": "ProductCategoryAlternateKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimProductSubcategory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorksDW2022')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimReseller')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorksDW2022",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ResellerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "GeographyKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ResellerAlternateKey",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					},
					{
						"name": "BusinessType",
						"type": "varchar"
					},
					{
						"name": "ResellerName",
						"type": "nvarchar"
					},
					{
						"name": "NumberEmployees",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderFrequency",
						"type": "char"
					},
					{
						"name": "OrderMonth",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "FirstOrderYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LastOrderYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductLine",
						"type": "nvarchar"
					},
					{
						"name": "AddressLine1",
						"type": "nvarchar"
					},
					{
						"name": "AddressLine2",
						"type": "nvarchar"
					},
					{
						"name": "AnnualSales",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "BankName",
						"type": "nvarchar"
					},
					{
						"name": "MinPaymentType",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "MinPaymentAmount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "AnnualRevenue",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "YearOpened",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimReseller"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorksDW2022')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimSalesReason')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorksDW2022",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalesReasonKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesReasonAlternateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesReasonName",
						"type": "nvarchar"
					},
					{
						"name": "SalesReasonReasonType",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimSalesReason"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorksDW2022')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimSalesTerritory')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorksDW2022",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalesTerritoryKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesTerritoryAlternateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesTerritoryRegion",
						"type": "nvarchar"
					},
					{
						"name": "SalesTerritoryCountry",
						"type": "nvarchar"
					},
					{
						"name": "SalesTerritoryGroup",
						"type": "nvarchar"
					},
					{
						"name": "SalesTerritoryImage",
						"type": "varbinary"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimSalesTerritory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorksDW2022')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EmployeeStaging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorksDW2022",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EmployeeNationalIDAlternateKey",
						"type": "nvarchar"
					},
					{
						"name": "ParentEmployeeNationalIDAlternateKey",
						"type": "nvarchar"
					},
					{
						"name": "SalesTerritoryAlternateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "NameStyle",
						"type": "bit"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "HireDate",
						"type": "date"
					},
					{
						"name": "BirthDate",
						"type": "date"
					},
					{
						"name": "LoginID",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					},
					{
						"name": "MaritalStatus",
						"type": "nchar"
					},
					{
						"name": "EmergencyContactName",
						"type": "nvarchar"
					},
					{
						"name": "EmergencyContactPhone",
						"type": "nvarchar"
					},
					{
						"name": "SalariedFlag",
						"type": "bit"
					},
					{
						"name": "Gender",
						"type": "nchar"
					},
					{
						"name": "PayFrequency",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "BaseRate",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "VacationHours",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "SickLeaveHours",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "CurrentFlag",
						"type": "bit"
					},
					{
						"name": "SalesPersonFlag",
						"type": "bit"
					},
					{
						"name": "DepartmentName",
						"type": "nvarchar"
					},
					{
						"name": "StartDate",
						"type": "date"
					},
					{
						"name": "EndDate",
						"type": "date"
					},
					{
						"name": "Status",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "Integration",
					"table": "EmployeeStaging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorksDW2022')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FactCurrencyRate')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorksDW2022",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "FactCurrencyRate"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorksDW2022')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FactCurrencyRateStaging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorksDW2022",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CurrencyKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AverageRate",
						"type": "float",
						"precision": 15
					},
					{
						"name": "EndOfDayRate",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "Integration",
					"table": "FactCurrencyRateStaging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorksDW2022')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FactInternetSales')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorksDW2022",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderDateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DueDateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ShipDateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PromotionKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CurrencyKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesTerritoryKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesOrderNumber",
						"type": "nvarchar"
					},
					{
						"name": "SalesOrderLineNumber",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "RevisionNumber",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "OrderQuantity",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "UnitPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ExtendedAmount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "UnitPriceDiscountPct",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DiscountAmount",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ProductStandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TotalProductCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "SalesAmount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TaxAmt",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Freight",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "CarrierTrackingNumber",
						"type": "nvarchar"
					},
					{
						"name": "CustomerPONumber",
						"type": "nvarchar"
					},
					{
						"name": "OrderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DueDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ShipDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FactInternetSales"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorksDW2022')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FactInternetSalesReason')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorksDW2022",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalesOrderNumber",
						"type": "nvarchar"
					},
					{
						"name": "SalesOrderLineNumber",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "SalesReasonKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FactInternetSalesReason"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorksDW2022')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FactInternetSalesReasonStaging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorksDW2022",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalesOrderNumber",
						"type": "nvarchar"
					},
					{
						"name": "SalesOrderLineNumber",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "SalesReasonAlternateKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "Integration",
					"table": "FactInternetSalesReasonStaging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorksDW2022')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FactInternetSalesStaging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorksDW2022",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "Integration",
					"table": "FactInternetSalesStaging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorksDW2022')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FactResellerSales')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorksDW2022",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderDateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DueDateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ShipDateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ResellerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmployeeKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PromotionKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CurrencyKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesTerritoryKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesOrderNumber",
						"type": "nvarchar"
					},
					{
						"name": "SalesOrderLineNumber",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "RevisionNumber",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "OrderQuantity",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "UnitPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ExtendedAmount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "UnitPriceDiscountPct",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DiscountAmount",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ProductStandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TotalProductCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "SalesAmount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TaxAmt",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Freight",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "CarrierTrackingNumber",
						"type": "nvarchar"
					},
					{
						"name": "CustomerPONumber",
						"type": "nvarchar"
					},
					{
						"name": "OrderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DueDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ShipDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FactResellerSales"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorksDW2022')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FactResellerSalesStaging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorksDW2022",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductAlternateKey",
						"type": "nvarchar"
					},
					{
						"name": "OrderDateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DueDateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ShipDateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ResellerAlternateKey",
						"type": "nvarchar"
					},
					{
						"name": "EmployeeNationalIDAlternateKey",
						"type": "nvarchar"
					},
					{
						"name": "PromotionAlternateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CurrencyAlternateKey",
						"type": "nvarchar"
					},
					{
						"name": "SalesTerritoryAlternateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesOrderNumber",
						"type": "nvarchar"
					},
					{
						"name": "SalesOrderLineNumber",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "RevisionNumber",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "OrderQuantity",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "UnitPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ExtendedAmount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "UnitPriceDiscountPct",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DiscountAmount",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ProductStandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TotalProductCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "SalesAmount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TaxAmt",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Freight",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "CarrierTrackingNumber",
						"type": "nvarchar"
					},
					{
						"name": "CustomerPONumber",
						"type": "nvarchar"
					},
					{
						"name": "OrderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DueDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ShipDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "Integration",
					"table": "FactResellerSalesStaging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorksDW2022')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GeographyStaging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorksDW2022",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "City",
						"type": "nvarchar"
					},
					{
						"name": "StateProvinceCode",
						"type": "nvarchar"
					},
					{
						"name": "StateProvinceName",
						"type": "nvarchar"
					},
					{
						"name": "CountryRegionCode",
						"type": "nvarchar"
					},
					{
						"name": "EnglishCountryRegionName",
						"type": "nvarchar"
					},
					{
						"name": "SpanishCountryRegionName",
						"type": "nvarchar"
					},
					{
						"name": "FrenchCountryRegionName",
						"type": "nvarchar"
					},
					{
						"name": "PostalCode",
						"type": "nvarchar"
					},
					{
						"name": "SalesTerritoryAlternateKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "Integration",
					"table": "GeographyStaging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorksDW2022')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProductCategoryStaging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorksDW2022",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductCategoryAlternateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EnglishProductCategoryName",
						"type": "nvarchar"
					},
					{
						"name": "SpanishProductCategoryName",
						"type": "nvarchar"
					},
					{
						"name": "FrenchProductCategoryName",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "Integration",
					"table": "ProductCategoryStaging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorksDW2022')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProductStaging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorksDW2022",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductAlternateKey",
						"type": "nvarchar"
					},
					{
						"name": "ProductSubcategoryAlternateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WeightUnitMeasureCode",
						"type": "nchar"
					},
					{
						"name": "SizeUnitMeasureCode",
						"type": "nchar"
					},
					{
						"name": "EnglishProductName",
						"type": "nvarchar"
					},
					{
						"name": "SpanishProductName",
						"type": "nvarchar"
					},
					{
						"name": "FrenchProductName",
						"type": "nvarchar"
					},
					{
						"name": "StandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "FinishedGoodsFlag",
						"type": "bit"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "SafetyStockLevel",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "ReorderPoint",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "ListPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "SizeRange",
						"type": "nvarchar"
					},
					{
						"name": "Weight",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DaysToManufacture",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductLine",
						"type": "nchar"
					},
					{
						"name": "DealerPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Class",
						"type": "nchar"
					},
					{
						"name": "Style",
						"type": "nchar"
					},
					{
						"name": "ModelName",
						"type": "nvarchar"
					},
					{
						"name": "LargePhoto",
						"type": "varbinary"
					},
					{
						"name": "EnglishDescription",
						"type": "nvarchar"
					},
					{
						"name": "FrenchDescription",
						"type": "nvarchar"
					},
					{
						"name": "ChineseDescription",
						"type": "nvarchar"
					},
					{
						"name": "ArabicDescription",
						"type": "nvarchar"
					},
					{
						"name": "HebrewDescription",
						"type": "nvarchar"
					},
					{
						"name": "ThaiDescription",
						"type": "nvarchar"
					},
					{
						"name": "GermanDescription",
						"type": "nvarchar"
					},
					{
						"name": "JapaneseDescription",
						"type": "nvarchar"
					},
					{
						"name": "TurkishDescription",
						"type": "nvarchar"
					},
					{
						"name": "StartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "EndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Status",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "Integration",
					"table": "ProductStaging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorksDW2022')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProductSubcategoryStaging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorksDW2022",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductSubcategoryKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductSubcategoryAlternateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EnglishProductSubcategoryName",
						"type": "nvarchar"
					},
					{
						"name": "SpanishProductSubcategoryName",
						"type": "nvarchar"
					},
					{
						"name": "FrenchProductSubcategoryName",
						"type": "nvarchar"
					},
					{
						"name": "ProductCategoryKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "Integration",
					"table": "ProductSubcategoryStaging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorksDW2022')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PromotionStaging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorksDW2022",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PromotionAlternateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EnglishPromotionName",
						"type": "nvarchar"
					},
					{
						"name": "SpanishPromotionName",
						"type": "nvarchar"
					},
					{
						"name": "FrenchPromotionName",
						"type": "nvarchar"
					},
					{
						"name": "DiscountPct",
						"type": "float",
						"precision": 15
					},
					{
						"name": "EnglishPromotionType",
						"type": "nvarchar"
					},
					{
						"name": "SpanishPromotionType",
						"type": "nvarchar"
					},
					{
						"name": "FrenchPromotionType",
						"type": "nvarchar"
					},
					{
						"name": "EnglishPromotionCategory",
						"type": "nvarchar"
					},
					{
						"name": "SpanishPromotionCategory",
						"type": "nvarchar"
					},
					{
						"name": "FrenchPromotionCategory",
						"type": "nvarchar"
					},
					{
						"name": "StartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "EndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "MinQty",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MaxQty",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "Integration",
					"table": "PromotionStaging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorksDW2022')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ResellerStaging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorksDW2022",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GeographyCity",
						"type": "nvarchar"
					},
					{
						"name": "GeographyPostalCode",
						"type": "nvarchar"
					},
					{
						"name": "GeographyStateProvinceCode",
						"type": "nvarchar"
					},
					{
						"name": "GeographyCountryRegionCode",
						"type": "nvarchar"
					},
					{
						"name": "ResellerAlternateKey",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					},
					{
						"name": "BusinessType",
						"type": "varchar"
					},
					{
						"name": "ResellerName",
						"type": "nvarchar"
					},
					{
						"name": "NumberEmployees",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderFrequency",
						"type": "char"
					},
					{
						"name": "OrderMonth",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "FirstOrderYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LastOrderYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductLine",
						"type": "nvarchar"
					},
					{
						"name": "AddressLine1",
						"type": "nvarchar"
					},
					{
						"name": "AddressLine2",
						"type": "nvarchar"
					},
					{
						"name": "AnnualSales",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "BankName",
						"type": "nvarchar"
					},
					{
						"name": "MinPaymentType",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "MinPaymentAmount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "AnnualRevenue",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "YearOpened",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "Integration",
					"table": "ResellerStaging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorksDW2022')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesReasonStaging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorksDW2022",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalesReasonAlternateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesReasonName",
						"type": "nvarchar"
					},
					{
						"name": "SalesReasonReasonType",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "Integration",
					"table": "SalesReasonStaging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorksDW2022')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesTerritoryStaging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AdventureWorksDW2022",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalesTerritoryAlternateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesTerritoryRegion",
						"type": "nvarchar"
					},
					{
						"name": "SalesTerritoryCountry",
						"type": "nvarchar"
					},
					{
						"name": "SalesTerritoryGroup",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "Integration",
					"table": "SalesTerritoryStaging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AdventureWorksDW2022')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AdventureWorks2022')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AdventureWorks2022_properties_typeProperties_server')]",
					"database": "[parameters('AdventureWorks2022_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SystemAssignedManagedIdentity"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AdventureWorksDW2022')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AdventureWorksDW2022_properties_typeProperties_server')]",
					"database": "[parameters('AdventureWorksDW2022_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SystemAssignedManagedIdentity"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "Southeast Asia",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false,
							"customProperties": []
						}
					}
				}
			},
			"dependsOn": []
		}
	]
}